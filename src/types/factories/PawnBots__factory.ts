/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PawnBots, PawnBotsInterface } from "../PawnBots";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chainlinkToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vrfFee_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vrfKeyHash_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__InsufficientFundsSent",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxPrivatePerAccountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxPublicPerTxExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__OffsetAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RandomnessAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RemainingReserveExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RemainingSaleExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SaleNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SaleNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SalePhaseMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__TooEarlyToReveal",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__UserNotEligible",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__VrfRequestIdMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "BurnUnsold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IPawnBots.SalePhase",
        name: "phase",
        type: "uint8",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "Reserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "SetBaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxPrivatePerAccount",
        type: "uint256",
      },
    ],
    name: "SetMaxPrivatePerAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxPublicPerTx",
        type: "uint256",
      },
    ],
    name: "SetMaxPublicPerTx",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "SetMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "SetProvenanceHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "SetRevealTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newSaleActive",
        type: "bool",
      },
    ],
    name: "SetSaleActive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPawnBots.SalePhase",
        name: "newSalePhase",
        type: "uint8",
      },
    ],
    name: "SetSalePhase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "WithdrawErc20",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLECTION_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "burnUnsold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPrivatePerAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPublicPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPrivate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mintPublic",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "privateMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salePhase",
    outputs: [
      {
        internalType: "enum IPawnBots.SalePhase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxPrivatePerAccount",
        type: "uint256",
      },
    ],
    name: "setMaxPrivatePerAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxPublicPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxPublicPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "setProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "setRevealTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newSaleActive",
        type: "bool",
      },
    ],
    name: "setSaleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPawnBots.SalePhase",
        name: "newSalePhase",
        type: "uint8",
      },
    ],
    name: "setSalePhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620031c1380380620031c1833981016040819052620000359162000210565b60408051808201825260098152685061776e20426f747360b81b602080830191825283518085019094526004845263424f545360e01b9084015281518693899392909162000086916002916200014d565b5080516200009c9060039060208401906200014d565b50506000805550620000ae33620000fb565b60016009556001600160a01b0391821660a05216608052601784905566470de4df820000600e55620000e56103e861271062000264565b60145560c09190915260e05250620002c7915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200015b906200028a565b90600052602060002090601f0160209004810192826200017f5760008555620001ca565b82601f106200019a57805160ff1916838001178555620001ca565b82800160010185558215620001ca579182015b82811115620001ca578251825591602001919060010190620001ad565b50620001d8929150620001dc565b5090565b5b80821115620001d85760008155600101620001dd565b80516001600160a01b03811681146200020b57600080fd5b919050565b600080600080600060a086880312156200022957600080fd5b6200023486620001f3565b9450602086015193506200024b60408701620001f3565b6060870151608090970151959894975095949392505050565b6000828210156200028557634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200029f57607f821691505b60208210811415620002c157634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051612eb96200030860003960006113030152600061132401526000818161113101526121ac0152600061217d0152612eb96000f3fe6080604052600436106103085760003560e01c80638da5cb5b1161019a578063bd1f4b52116100e1578063d55565441161008a578063e985e9c511610064578063e985e9c51461083e578063efd0cbf914610887578063f2fde38b1461089a57600080fd5b8063d5556544146107eb578063d8258d9514610801578063e4f2487a1461081757600080fd5b8063c6ab67a3116100bb578063c6ab67a3146107a3578063c87b56dd146107b8578063cd2275d3146107d857600080fd5b8063bd1f4b521461074d578063c1e285071461076d578063c61b36201461078d57600080fd5b8063a475b5dd11610143578063b7c0007d1161011d578063b7c0007d14610701578063b88d4fde14610717578063ba829d711461073757600080fd5b8063a475b5dd146106ac578063ac8154de146106c1578063b2b84f27146106e157600080fd5b806395d89b411161017457806395d89b4114610661578063a035b1fe14610676578063a22cb4651461068c57600080fd5b80638da5cb5b1461060357806391b7f5ed1461062157806394985ddd1461064157600080fd5b80634c81433f1161025e57806376d053c0116102075780637cb64759116101e15780637cb64759146105a3578063819b25ba146105c3578063841718a6146105e357600080fd5b806376d053c01461054d5780637ad59431146105635780637bc3cd311461058357600080fd5b806368428a1b1161023857806368428a1b146104fe57806370a0823114610518578063715018a61461053857600080fd5b80634c81433f146104a857806355f804b3146104be5780636352211e146104de57600080fd5b806310969523116102c05780632a7144f71161029a5780632a7144f71461043b5780632e1a7d4d1461046857806342842e0e1461048857600080fd5b806310969523146103e257806318160ddd1461040257806323b872dd1461041b57600080fd5b8063078fd9ea116102f1578063078fd9ea14610364578063081812fc14610388578063095ea7b3146103c057600080fd5b806301ffc9a71461030d57806306fdde0314610342575b600080fd5b34801561031957600080fd5b5061032d610328366004612802565b6108ba565b60405190151581526020015b60405180910390f35b34801561034e57600080fd5b5061035761090c565b6040516103399190612877565b34801561037057600080fd5b5061037a60145481565b604051908152602001610339565b34801561039457600080fd5b506103a86103a336600461288a565b61099e565b6040516001600160a01b039091168152602001610339565b3480156103cc57600080fd5b506103e06103db3660046128bf565b6109e2565b005b3480156103ee57600080fd5b506103e06103fd3660046128e9565b610adf565b34801561040e57600080fd5b506001546000540361037a565b34801561042757600080fd5b506103e061043636600461295b565b610b76565b34801561044757600080fd5b5061037a610456366004612997565b600f6020526000908152604090205481565b34801561047457600080fd5b506103e061048336600461288a565b610b86565b34801561049457600080fd5b506103e06104a336600461295b565b610c20565b3480156104b457600080fd5b5061037a60115481565b3480156104ca57600080fd5b506103e06104d93660046128e9565b610c3b565b3480156104ea57600080fd5b506103a86104f936600461288a565b610cc1565b34801561050a57600080fd5b5060135461032d9060ff1681565b34801561052457600080fd5b5061037a610533366004612997565b610ccc565b34801561054457600080fd5b506103e0610d1b565b34801561055957600080fd5b5061037a600b5481565b34801561056f57600080fd5b506103e061057e3660046129b2565b610d6f565b34801561058f57600080fd5b506103e061059e36600461288a565b610e09565b3480156105af57600080fd5b506103e06105be36600461288a565b610e86565b3480156105cf57600080fd5b506103e06105de36600461288a565b610f03565b3480156105ef57600080fd5b506103e06105fe3660046129e1565b611020565b34801561060f57600080fd5b506008546001600160a01b03166103a8565b34801561062d57600080fd5b506103e061063c36600461288a565b6110a9565b34801561064d57600080fd5b506103e061065c3660046129fe565b611126565b34801561066d57600080fd5b506103576111ac565b34801561068257600080fd5b5061037a600e5481565b34801561069857600080fd5b506103e06106a7366004612a20565b6111bb565b3480156106b857600080fd5b506103e0611251565b3480156106cd57600080fd5b506103e06106dc36600461288a565b61134d565b3480156106ed57600080fd5b506103e06106fc36600461288a565b611432565b34801561070d57600080fd5b5061037a6103e881565b34801561072357600080fd5b506103e0610732366004612a6d565b6114af565b34801561074357600080fd5b5061037a60125481565b34801561075957600080fd5b506103e06107683660046128bf565b6114f9565b34801561077957600080fd5b506103e061078836600461288a565b61162a565b34801561079957600080fd5b5061037a600c5481565b3480156107af57600080fd5b506103576116a7565b3480156107c457600080fd5b506103576107d336600461288a565b611735565b6103e06107e6366004612b49565b611826565b3480156107f757600080fd5b5061037a600d5481565b34801561080d57600080fd5b5061037a61271081565b34801561082357600080fd5b506015546108319060ff1681565b6040516103399190612c00565b34801561084a57600080fd5b5061032d610859366004612c0e565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6103e061089536600461288a565b611a96565b3480156108a657600080fd5b506103e06108b5366004612997565b611c3f565b60006301ffc9a760e01b6001600160e01b0319831614806108eb57506380ac58cd60e01b6001600160e01b03198316145b806109065750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461091b90612c41565b80601f016020809104026020016040519081016040528092919081815260200182805461094790612c41565b80156109945780601f1061096957610100808354040283529160200191610994565b820191906000526020600020905b81548152906001019060200180831161097757829003601f168201915b5050505050905090565b60006109a982611d0f565b6109c6576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006109ed82611d36565b9050806001600160a01b0316836001600160a01b03161415610a225760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610a76576001600160a01b038116600090815260076020908152604080832033845290915290205460ff16610a76576040516367d9dca160e11b815260040160405180910390fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b03163314610b2c5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d83398151915260448201526064015b60405180910390fd5b610b3860108383612753565b507f6760362308ca665d8ad5234d7f09a8ac815ee45be8350cad464cb1e4eadd34ee8282604051610b6a929190612c7c565b60405180910390a15050565b610b81838383611d9e565b505050565b6008546001600160a01b03163314610bce5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b610be9610be36008546001600160a01b031690565b82611f6c565b6040518181527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d906020015b60405180910390a150565b610b81838383604051806020016040528060008152506114af565b6008546001600160a01b03163314610c835760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b610c8f60168383612753565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa8282604051610b6a929190612c7c565b600061090682611d36565b60006001600160a01b038216610cf5576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b03163314610d635760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b610d6d6000612085565b565b6008546001600160a01b03163314610db75760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b6015805482919060ff191660018381811115610dd557610dd5612bc8565b02179055507f6b7328db37cfe246513223c8f2d0c867a03d1dc734e0cd7ee48b3029bde7b18981604051610c159190612c00565b6008546001600160a01b03163314610e515760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b600b8190556040518181527f8bda720ddbdba568537190f16bce8db1c831251b89dcf577e360b5c7161ae4cc90602001610c15565b6008546001600160a01b03163314610ece5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b60178190556040518181527f914960aef5e033ce5cae8a7992d4b7a6f0f9741227b66acb67c605b7019f8a4690602001610c15565b6008546001600160a01b03163314610f4b5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b60026009541415610f9e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b23565b60026009556011546103e890610fb49083612cc1565b1115610fd357604051630430d4d560e31b815260040160405180910390fd5b6011805482019055610fe533826120e4565b6040518181527fdb7b64a879507c32bda4d0cf22dee29ed875c7157ecbbc10fe11bf14fab06d129060200160405180910390a1506001600955565b6008546001600160a01b031633146110685760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b6013805460ff19168215159081179091556040519081527fec3bd239657ee715efc2bf46f9c94c212e9c2f00582f07a0d01c2ff4bb6669d690602001610c15565b6008546001600160a01b031633146110f15760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b600e8190556040518181527f4f5539c0409dfc4cb06f64cbd31237e1fbfe443f531584bf4dd77ec7fc5ba7b190602001610c15565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461119e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610b23565b6111a882826120fe565b5050565b60606003805461091b90612c41565b6001600160a01b0382163314156111e55760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b031633146112995760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b6012544210156112bc57604051630bfa01e360e41b815260040160405180910390fd5b600d54156112dd576040516378a1f93760e11b815260040160405180910390fd5b601854156112fe576040516384049d1360e01b815260040160405180910390fd5b6113487f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612179565b601855565b6008546001600160a01b031633146113955760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b60135460ff16156113b95760405163130803bb60e11b815260040160405180910390fd5b6011546014546113c99190612cc1565b600154600054036113da9083612cc1565b11156113f95760405163f2e7ce1b60e01b815260040160405180910390fd5b6014805482900390556040518181527f53b473a43fb77f7bf8d1542c780b0ddd21b4803bfe6e2f156329101b0481e1b990602001610c15565b6008546001600160a01b0316331461147a5760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b600c8190556040518181527f452c3c06ae8d26ad71173bb7adea21bb336debb801fb717cad6c1e8e7118999e90602001610c15565b6114ba848484611d9e565b6001600160a01b0383163b156114f3576114d684848484612304565b6114f3576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6008546001600160a01b031633146115415760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b816001600160a01b031663a9059cbb6115626008546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b1580156115aa57600080fd5b505af11580156115be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e29190612cd9565b50816001600160a01b03167f3925d55ad891dfec4e96ebea870d768b1169d846e9f34bd32518595b9a17866a8260405161161e91815260200190565b60405180910390a25050565b6008546001600160a01b031633146116725760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b60128190556040518181527fd3c27564aa5824adeda19a9566eef46a5885ecd23d94587892f87a30f3720c1690602001610c15565b601080546116b490612c41565b80601f01602080910402602001604051908101604052809291908181526020018280546116e090612c41565b801561172d5780601f106117025761010080835404028352916020019161172d565b820191906000526020600020905b81548152906001019060200180831161171057829003601f168201915b505050505081565b606061174082611d0f565b61175d57604051636d23a94560e11b815260040160405180910390fd5b60006117676123fb565b600d54909150806117b957600082511161179057604051806020016040528060008152506117b1565b816040516020016117a19190612cf6565b6040516020818303038152906040525b949350505050565b60006127106117c88387612cc1565b6117d29190612d41565b905060008351116117f2576040518060200160405280600081525061181d565b826117fc8261240a565b60405160200161180d929190612d55565b6040516020818303038152906040525b95945050505050565b600260095414156118795760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b23565b6002600955600e5460135460ff166118a45760405163c7bedfef60e01b815260040160405180910390fd5b600060155460ff1660018111156118bd576118bd612bc8565b146118da576040516262f0c760e91b815260040160405180910390fd5b61194f838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506017546040516bffffffffffffffffffffffff193360601b166020820152909250603401905060405160208183030381529060405280519060200120612520565b61196c5760405163c5c67f9360e01b815260040160405180910390fd5b600b54336000908152600f60205260409020546119899086612cc1565b11156119a8576040516370fd9e5f60e01b815260040160405180910390fd5b6011546014546119b89190612cc1565b600154600054036119c99086612cc1565b11156119e85760405163f2e7ce1b60e01b815260040160405180910390fd5b80840234811115611a0b57604051626adfb960e81b815260040160405180910390fd5b336000908152600f60205260409020805486019055348114611a3a57611a3a33611a358334612d94565b611f6c565b611a4433866120e4565b336001600160a01b03167f542ce94ca9ffbc5633caeef7e530d07d13d22c3760be9a74d31657f90efdf98586846000604051611a8293929190612dab565b60405180910390a250506001600955505050565b60026009541415611ae95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b23565b6002600955600e5460135460ff16611b145760405163c7bedfef60e01b815260040160405180910390fd5b600160155460ff166001811115611b2d57611b2d612bc8565b14611b4a576040516262f0c760e91b815260040160405180910390fd5b600c54821115611b6d57604051635823b8e960e01b815260040160405180910390fd5b601154601454611b7d9190612cc1565b60015460005403611b8e9084612cc1565b1115611bad5760405163f2e7ce1b60e01b815260040160405180910390fd5b80820234811115611bd057604051626adfb960e81b815260040160405180910390fd5b803414611be557611be533611a358334612d94565b611bef33846120e4565b336001600160a01b03167f542ce94ca9ffbc5633caeef7e530d07d13d22c3760be9a74d31657f90efdf98584846001604051611c2d93929190612dab565b60405180910390a25050600160095550565b6008546001600160a01b03163314611c875760405162461bcd60e51b81526020600482018190526024820152600080516020612e8d8339815191526044820152606401610b23565b6001600160a01b038116611d035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b23565b611d0c81612085565b50565b6000805482108015610906575050600090815260046020526040902054600160e01b161590565b600081600054811015611d8557600081815260046020526040902054600160e01b8116611d83575b80611d7c575060001901600081815260046020526040902054611d5e565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b6000611da982611d36565b9050836001600160a01b0316816001600160a01b031614611ddc5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611e1857506001600160a01b038516600090815260076020908152604080832033845290915290205460ff165b80611e33575033611e288461099e565b6001600160a01b0316145b905080611e5357604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611e7a57604051633a954ecd60e21b815260040160405180910390fd5b6000838152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191690556001600160a01b038881168452600583528184208054600019019055871683528083208054600101905585835260049091529020600160e11b4260a01b861781179091558216611f245760018301600081815260046020526040902054611f22576000548114611f225760008181526004602052604090208390555b505b82846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b80471015611fbc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610b23565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612009576040519150601f19603f3d011682016040523d82523d6000602084013e61200e565b606091505b5050905080610b815760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610b23565b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111a8828260405180602001604052806000815250612536565b600d541561211f576040516378a1f93760e11b815260040160405180910390fd5b816018541461214157604051634cb61eaf60e11b815260040160405180910390fd5b61270f8106600101600d556040517f66b9f0d2f5af4125e8098bf5f1efc517ed46a70d8638734d186af310e2f8bc7590600090a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016121e9929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161221693929190612dc6565b602060405180830381600087803b15801561223057600080fd5b505af1158015612244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122689190612cd9565b506000838152600a6020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120938790529190526122c4906001612cc1565b6000858152600a60205260409020556117b18482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290612339903390899088908890600401612dee565b602060405180830381600087803b15801561235357600080fd5b505af1925050508015612383575060408051601f3d908101601f1916820190925261238091810190612e2a565b60015b6123de573d8080156123b1576040519150601f19603f3d011682016040523d82523d6000602084013e6123b6565b606091505b5080516123d6576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60606016805461091b90612c41565b60608161242e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612458578061244281612e47565b91506124519050600a83612e62565b9150612432565b60008167ffffffffffffffff81111561247357612473612a57565b6040519080825280601f01601f19166020018201604052801561249d576020820181803683370190505b5090505b84156117b1576124b2600183612d94565b91506124bf600a86612d41565b6124ca906030612cc1565b60f81b8183815181106124df576124df612e76565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612519600a86612e62565b94506124a1565b60008261252d85846126a7565b14949350505050565b6000546001600160a01b03841661255f57604051622e076360e81b815260040160405180910390fd5b8261257d5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03841660008181526005602090815260408083208054680100000000000000018902019055848352600490915290204260a01b86176001861460e11b1790558190818501903b15612652575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461261b6000878480600101955087612304565b612638576040516368d2bf6b60e11b815260040160405180910390fd5b8082106125d057826000541461264d57600080fd5b612697565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808210612653575b5060009081556114f39085838684565b600081815b845181101561274b5760008582815181106126c9576126c9612e76565b6020026020010151905080831161270b576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612738565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061274381612e47565b9150506126ac565b509392505050565b82805461275f90612c41565b90600052602060002090601f01602090048101928261278157600085556127c7565b82601f1061279a5782800160ff198235161785556127c7565b828001600101855582156127c7579182015b828111156127c75782358255916020019190600101906127ac565b506127d39291506127d7565b5090565b5b808211156127d357600081556001016127d8565b6001600160e01b031981168114611d0c57600080fd5b60006020828403121561281457600080fd5b8135611d7c816127ec565b60005b8381101561283a578181015183820152602001612822565b838111156114f35750506000910152565b6000815180845261286381602086016020860161281f565b601f01601f19169290920160200192915050565b602081526000611d7c602083018461284b565b60006020828403121561289c57600080fd5b5035919050565b80356001600160a01b03811681146128ba57600080fd5b919050565b600080604083850312156128d257600080fd5b6128db836128a3565b946020939093013593505050565b600080602083850312156128fc57600080fd5b823567ffffffffffffffff8082111561291457600080fd5b818501915085601f83011261292857600080fd5b81358181111561293757600080fd5b86602082850101111561294957600080fd5b60209290920196919550909350505050565b60008060006060848603121561297057600080fd5b612979846128a3565b9250612987602085016128a3565b9150604084013590509250925092565b6000602082840312156129a957600080fd5b611d7c826128a3565b6000602082840312156129c457600080fd5b813560028110611d7c57600080fd5b8015158114611d0c57600080fd5b6000602082840312156129f357600080fd5b8135611d7c816129d3565b60008060408385031215612a1157600080fd5b50508035926020909101359150565b60008060408385031215612a3357600080fd5b612a3c836128a3565b91506020830135612a4c816129d3565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612a8357600080fd5b612a8c856128a3565b9350612a9a602086016128a3565b925060408501359150606085013567ffffffffffffffff80821115612abe57600080fd5b818701915087601f830112612ad257600080fd5b813581811115612ae457612ae4612a57565b604051601f8201601f19908116603f01168101908382118183101715612b0c57612b0c612a57565b816040528281528a6020848701011115612b2557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060408486031215612b5e57600080fd5b83359250602084013567ffffffffffffffff80821115612b7d57600080fd5b818601915086601f830112612b9157600080fd5b813581811115612ba057600080fd5b8760208260051b8501011115612bb557600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60028110612bfc57634e487b7160e01b600052602160045260246000fd5b9052565b602081016109068284612bde565b60008060408385031215612c2157600080fd5b612c2a836128a3565b9150612c38602084016128a3565b90509250929050565b600181811c90821680612c5557607f821691505b60208210811415612c7657634e487b7160e01b600052602260045260246000fd5b50919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612cd457612cd4612cab565b500190565b600060208284031215612ceb57600080fd5b8151611d7c816129d3565b60008251612d0881846020870161281f565b620c4def60eb1b92019182525064173539b7b760d91b6003820152600801919050565b634e487b7160e01b600052601260045260246000fd5b600082612d5057612d50612d2b565b500690565b60008351612d6781846020880161281f565b835190830190612d7b81836020880161281f565b64173539b7b760d91b9101908152600501949350505050565b600082821015612da657612da6612cab565b500390565b83815260208101839052606081016117b16040830184612bde565b6001600160a01b038416815282602082015260606040820152600061181d606083018461284b565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612e20608083018461284b565b9695505050505050565b600060208284031215612e3c57600080fd5b8151611d7c816127ec565b6000600019821415612e5b57612e5b612cab565b5060010190565b600082612e7157612e71612d2b565b500490565b634e487b7160e01b600052603260045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a";

type PawnBotsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PawnBotsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PawnBots__factory extends ContractFactory {
  constructor(...args: PawnBotsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    chainlinkToken_: string,
    merkleRoot_: BytesLike,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PawnBots> {
    return super.deploy(
      chainlinkToken_,
      merkleRoot_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    ) as Promise<PawnBots>;
  }
  getDeployTransaction(
    chainlinkToken_: string,
    merkleRoot_: BytesLike,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chainlinkToken_,
      merkleRoot_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    );
  }
  attach(address: string): PawnBots {
    return super.attach(address) as PawnBots;
  }
  connect(signer: Signer): PawnBots__factory {
    return super.connect(signer) as PawnBots__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PawnBotsInterface {
    return new utils.Interface(_abi) as PawnBotsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PawnBots {
    return new Contract(address, _abi, signerOrProvider) as PawnBots;
  }
}
