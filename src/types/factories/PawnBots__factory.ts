/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PawnBots, PawnBotsInterface } from "../PawnBots";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chainlinkToken_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vrfFee_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vrfKeyHash_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__InsufficientFundsSent",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxPriceExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxPrivatePerAccountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxPublicPerTxExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__OffsetAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RandomnessAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RemainingReserveExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RemainingSaleExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SaleNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SaleNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SalePhaseMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__TooEarlyToReveal",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__UserNotEligible",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__VrfRequestIdMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "BurnUnsold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IPawnBots.SalePhase",
        name: "phase",
        type: "uint8",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "Reserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "SetBaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxPrivatePerAccount",
        type: "uint256",
      },
    ],
    name: "SetMaxPrivatePerAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxPublicPerTx",
        type: "uint256",
      },
    ],
    name: "SetMaxPublicPerTx",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "SetMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "SetProvenanceHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "SetRevealTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newSaleActive",
        type: "bool",
      },
    ],
    name: "SetSaleActive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPawnBots.SalePhase",
        name: "newSalePhase",
        type: "uint8",
      },
    ],
    name: "SetSalePhase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "WithdrawErc20",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLECTION_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "burnUnsold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPrivatePerAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPublicPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPrivate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mintPublic",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "privateMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "salePhase",
    outputs: [
      {
        internalType: "enum IPawnBots.SalePhase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxPrivatePerAccount",
        type: "uint256",
      },
    ],
    name: "setMaxPrivatePerAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxPublicPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxPublicPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "setProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "setRevealTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newSaleActive",
        type: "bool",
      },
    ],
    name: "setSaleActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPawnBots.SalePhase",
        name: "newSalePhase",
        type: "uint8",
      },
    ],
    name: "setSalePhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052612710600b553480156200001757600080fd5b5060405162003380380380620033808339810160408190526200003a916200020c565b60408051808201825260098152685061776e20426f747360b81b602080830191825283518085019094526004845263424f545360e01b908401528151869389939290916200008b9160029162000149565b508051620000a190600390602084019062000149565b50506000805550620000b333620000f7565b60016009556001600160a01b0391821660a052166080526018849055600b54620000e1906103e89062000260565b601555601991909155601a5550620002c3915050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001579062000286565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b80516001600160a01b03811681146200020757600080fd5b919050565b600080600080600060a086880312156200022557600080fd5b6200023086620001ef565b9450602086015193506200024760408701620001ef565b6060870151608090970151959894975095949392505050565b6000828210156200028157634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200029b57607f821691505b60208210811415620002bd57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051613090620002f06000396000818161113501526122fe015260006122cf01526130906000f3fe6080604052600436106103135760003560e01c80638da5cb5b1161019a578063bd1f4b52116100e1578063d55565441161008a578063e985e9c511610064578063e985e9c514610867578063efd0cbf9146108b0578063f2fde38b146108c357600080fd5b8063d555654414610814578063d8258d951461082a578063e4f2487a1461084057600080fd5b8063c6ab67a3116100bb578063c6ab67a3146107cc578063c87b56dd146107e1578063cd2275d31461080157600080fd5b8063bd1f4b5214610776578063c1e2850714610796578063c61b3620146107b657600080fd5b8063a475b5dd11610143578063b7c0007d1161011d578063b7c0007d1461072a578063b88d4fde14610740578063ba829d711461076057600080fd5b8063a475b5dd146106d5578063ac8154de146106ea578063b2b84f271461070a57600080fd5b806395d89b411161017457806395d89b411461068a578063a035b1fe1461069f578063a22cb465146106b557600080fd5b80638da5cb5b1461062c57806391b7f5ed1461064a57806394985ddd1461066a57600080fd5b80634c81433f1161025e57806376d053c0116102075780637cb64759116101e15780637cb64759146105cc578063819b25ba146105ec578063841718a61461060c57600080fd5b806376d053c0146105765780637ad594311461058c5780637bc3cd31146105ac57600080fd5b806368428a1b1161023857806368428a1b1461052757806370a0823114610541578063715018a61461056157600080fd5b80634c81433f146104d157806355f804b3146104e75780636352211e1461050757600080fd5b806310969523116102c05780632a7144f71161029a5780632a7144f7146104645780632e1a7d4d1461049157806342842e0e146104b157600080fd5b8063109695231461040b57806318160ddd1461042b57806323b872dd1461044457600080fd5b8063078fd9ea116102f1578063078fd9ea1461039b578063081812fc146103b1578063095ea7b3146103e957600080fd5b806301c11d961461031857806301ffc9a71461034957806306fdde0314610379575b600080fd5b34801561032457600080fd5b5061033669d3c21bcecceda100000081565b6040519081526020015b60405180910390f35b34801561035557600080fd5b506103696103643660046129d6565b6108e3565b6040519015158152602001610340565b34801561038557600080fd5b5061038e610935565b6040516103409190612a4b565b3480156103a757600080fd5b5061033660155481565b3480156103bd57600080fd5b506103d16103cc366004612a5e565b6109c7565b6040516001600160a01b039091168152602001610340565b3480156103f557600080fd5b50610409610404366004612a93565b610a0b565b005b34801561041757600080fd5b50610409610426366004612abd565b610ab6565b34801561043757600080fd5b5060015460005403610336565b34801561045057600080fd5b5061040961045f366004612b2f565b610b4d565b34801561047057600080fd5b5061033661047f366004612b6b565b60106020526000908152604090205481565b34801561049d57600080fd5b506104096104ac366004612a5e565b610b58565b3480156104bd57600080fd5b506104096104cc366004612b2f565b610bf2565b3480156104dd57600080fd5b5061033660125481565b3480156104f357600080fd5b50610409610502366004612abd565b610c0d565b34801561051357600080fd5b506103d1610522366004612a5e565b610c93565b34801561053357600080fd5b506014546103699060ff1681565b34801561054d57600080fd5b5061033661055c366004612b6b565b610ca5565b34801561056d57600080fd5b50610409610cf4565b34801561058257600080fd5b50610336600c5481565b34801561059857600080fd5b506104096105a7366004612b86565b610d48565b3480156105b857600080fd5b506104096105c7366004612a5e565b610de2565b3480156105d857600080fd5b506104096105e7366004612a5e565b610e5f565b3480156105f857600080fd5b50610409610607366004612a5e565b610edc565b34801561061857600080fd5b50610409610627366004612bb5565b610ff9565b34801561063857600080fd5b506008546001600160a01b03166103d1565b34801561065657600080fd5b50610409610665366004612a5e565b611082565b34801561067657600080fd5b50610409610685366004612bd2565b61112a565b34801561069657600080fd5b5061038e6111b0565b3480156106ab57600080fd5b50610336600f5481565b3480156106c157600080fd5b506104096106d0366004612bf4565b6111bf565b3480156106e157600080fd5b50610409611255565b3480156106f657600080fd5b50610409610705366004612a5e565b611315565b34801561071657600080fd5b50610409610725366004612a5e565b6113fa565b34801561073657600080fd5b506103366103e881565b34801561074c57600080fd5b5061040961075b366004612c41565b611477565b34801561076c57600080fd5b5061033660135481565b34801561078257600080fd5b50610409610791366004612a93565b6114c8565b3480156107a257600080fd5b506104096107b1366004612a5e565b6115f9565b3480156107c257600080fd5b50610336600d5481565b3480156107d857600080fd5b5061038e611676565b3480156107ed57600080fd5b5061038e6107fc366004612a5e565b611704565b61040961080f366004612d1d565b6117ff565b34801561082057600080fd5b50610336600e5481565b34801561083657600080fd5b50610336600b5481565b34801561084c57600080fd5b5060165461085a9060ff1681565b6040516103409190612dd4565b34801561087357600080fd5b50610369610882366004612de2565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6104096108be366004612a5e565b611a69565b3480156108cf57600080fd5b506104096108de366004612b6b565b611c0b565b60006001600160e01b031982166380ac58cd60e01b148061091457506001600160e01b03198216635b5e139f60e01b145b8061092f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461094490612e15565b80601f016020809104026020016040519081016040528092919081815260200182805461097090612e15565b80156109bd5780601f10610992576101008083540402835291602001916109bd565b820191906000526020600020905b8154815290600101906020018083116109a057829003601f168201915b5050505050905090565b60006109d282611cdb565b6109ef576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610a1682610c93565b9050806001600160a01b0316836001600160a01b03161415610a4b5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614801590610a8857506001600160a01b038116600090815260076020908152604080832033845290915290205460ff16155b15610aa6576040516367d9dca160e11b815260040160405180910390fd5b610ab1838383611d06565b505050565b6008546001600160a01b03163314610b035760405162461bcd60e51b8152602060048201819052602482015260008051602061306483398151915260448201526064015b60405180910390fd5b610b0f60118383612927565b507f6760362308ca665d8ad5234d7f09a8ac815ee45be8350cad464cb1e4eadd34ee8282604051610b41929190612e4a565b60405180910390a15050565b610ab1838383611d6f565b6008546001600160a01b03163314610ba05760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b610bbb610bb56008546001600160a01b031690565b82611fa2565b6040518181527f5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d906020015b60405180910390a150565b610ab183838360405180602001604052806000815250611477565b6008546001600160a01b03163314610c555760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b610c6160178383612927565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa8282604051610b41929190612e4a565b6000610c9e826120bb565b5192915050565b60006001600160a01b038216610cce576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b03163314610d3c5760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b610d4660006121d7565b565b6008546001600160a01b03163314610d905760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b6016805482919060ff191660018381811115610dae57610dae612d9c565b02179055507f6b7328db37cfe246513223c8f2d0c867a03d1dc734e0cd7ee48b3029bde7b18981604051610be79190612dd4565b6008546001600160a01b03163314610e2a5760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b600c8190556040518181527f8bda720ddbdba568537190f16bce8db1c831251b89dcf577e360b5c7161ae4cc90602001610be7565b6008546001600160a01b03163314610ea75760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b60188190556040518181527f914960aef5e033ce5cae8a7992d4b7a6f0f9741227b66acb67c605b7019f8a4690602001610be7565b6008546001600160a01b03163314610f245760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b60026009541415610f775760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610afa565b60026009556012546103e890610f8d9083612e8f565b1115610fac57604051630430d4d560e31b815260040160405180910390fd5b6012805482019055610fbe8133612236565b6040518181527fdb7b64a879507c32bda4d0cf22dee29ed875c7157ecbbc10fe11bf14fab06d129060200160405180910390a1506001600955565b6008546001600160a01b031633146110415760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b6014805460ff19168215159081179091556040519081527fec3bd239657ee715efc2bf46f9c94c212e9c2f00582f07a0d01c2ff4bb6669d690602001610be7565b6008546001600160a01b031633146110ca5760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b69d3c21bcecceda10000008111156110f55760405163640b6ff560e11b815260040160405180910390fd5b600f8190556040518181527f4f5539c0409dfc4cb06f64cbd31237e1fbfe443f531584bf4dd77ec7fc5ba7b190602001610be7565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111a25760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610afa565b6111ac8282612240565b5050565b60606003805461094490612e15565b6001600160a01b0382163314156111e95760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b0316331461129d5760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b6013544210156112c057604051630bfa01e360e41b815260040160405180910390fd5b600e54156112e1576040516378a1f93760e11b815260040160405180910390fd5b601b5415611302576040516384049d1360e01b815260040160405180910390fd5b611310601a546019546122cb565b601b55565b6008546001600160a01b0316331461135d5760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b60145460ff16156113815760405163130803bb60e11b815260040160405180910390fd5b6012546015546113919190612e8f565b600154600054036113a29083612e8f565b11156113c15760405163f2e7ce1b60e01b815260040160405180910390fd5b6015805482900390556040518181527f53b473a43fb77f7bf8d1542c780b0ddd21b4803bfe6e2f156329101b0481e1b990602001610be7565b6008546001600160a01b031633146114425760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b600d8190556040518181527f452c3c06ae8d26ad71173bb7adea21bb336debb801fb717cad6c1e8e7118999e90602001610be7565b611482848484611d6f565b6001600160a01b0383163b151580156114a457506114a284848484612456565b155b156114c2576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6008546001600160a01b031633146115105760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b816001600160a01b031663a9059cbb6115316008546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561157957600080fd5b505af115801561158d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b19190612ea7565b50816001600160a01b03167f3925d55ad891dfec4e96ebea870d768b1169d846e9f34bd32518595b9a17866a826040516115ed91815260200190565b60405180910390a25050565b6008546001600160a01b031633146116415760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b60138190556040518181527fd3c27564aa5824adeda19a9566eef46a5885ecd23d94587892f87a30f3720c1690602001610be7565b6011805461168390612e15565b80601f01602080910402602001604051908101604052809291908181526020018280546116af90612e15565b80156116fc5780601f106116d1576101008083540402835291602001916116fc565b820191906000526020600020905b8154815290600101906020018083116116df57829003601f168201915b505050505081565b606061170f82611cdb565b61172c57604051636d23a94560e11b815260040160405180910390fd5b600061173661254d565b9050600e54600014156117895760008151116117615760405180602001604052806000815250611782565b806040516020016117729190612ec4565b6040516020818303038152906040525b9392505050565b6000600b54600e548561179c9190612e8f565b6117a69190612f0f565b905060008251116117c657604051806020016040528060008152506117f1565b816117d08261255c565b6040516020016117e1929190612f23565b6040516020818303038152906040525b949350505050565b50919050565b600260095414156118525760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610afa565b600260095560145460ff1661187a5760405163c7bedfef60e01b815260040160405180910390fd5b600060165460ff16600181111561189357611893612d9c565b146118b0576040516262f0c760e91b815260040160405180910390fd5b611925828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506018546040516bffffffffffffffffffffffff193360601b166020820152909250603401905060405160208183030381529060405280519060200120612672565b6119425760405163c5c67f9360e01b815260040160405180910390fd5b600c543360009081526010602052604090205461195f9085612e8f565b111561197e576040516370fd9e5f60e01b815260040160405180910390fd5b60125460155461198e9190612e8f565b6001546000540361199f9085612e8f565b11156119be5760405163f2e7ce1b60e01b815260040160405180910390fd5b600f548302348111156119e357604051626adfb960e81b815260040160405180910390fd5b336000818152601060205260409020805486019055611a03908590612236565b80341115611a1e57611a1e33611a198334612f62565b611fa2565b600f5460405133917f542ce94ca9ffbc5633caeef7e530d07d13d22c3760be9a74d31657f90efdf98591611a56918891600090612f79565b60405180910390a2505060016009555050565b60026009541415611abc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610afa565b600260095560145460ff16611ae45760405163c7bedfef60e01b815260040160405180910390fd5b600160165460ff166001811115611afd57611afd612d9c565b14611b1a576040516262f0c760e91b815260040160405180910390fd5b600d54811115611b3d57604051635823b8e960e01b815260040160405180910390fd5b601254601554611b4d9190612e8f565b60015460005403611b5e9083612e8f565b1115611b7d5760405163f2e7ce1b60e01b815260040160405180910390fd5b600f54810234811115611ba257604051626adfb960e81b815260040160405180910390fd5b611bac8233612236565b80341115611bc257611bc233611a198334612f62565b600f5460405133917f542ce94ca9ffbc5633caeef7e530d07d13d22c3760be9a74d31657f90efdf98591611bfa918691600190612f79565b60405180910390a250506001600955565b6008546001600160a01b03163314611c535760405162461bcd60e51b815260206004820181905260248201526000805160206130648339815191526044820152606401610afa565b6001600160a01b038116611ccf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610afa565b611cd8816121d7565b50565b600080548210801561092f575050600090815260046020526040902054600160e01b900460ff161590565b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000611d7a826120bb565b80519091506000906001600160a01b0316336001600160a01b03161480611dc5575081516001600160a01b0316600090815260076020908152604080832033845290915290205460ff165b80611de0575033611dd5846109c7565b6001600160a01b0316145b905080611e0057604051632ce44b5f60e11b815260040160405180910390fd5b846001600160a01b031682600001516001600160a01b031614611e355760405162a1148160e81b815260040160405180910390fd5b6001600160a01b038416611e5c57604051633a954ecd60e21b815260040160405180910390fd5b611e6c6000848460000151611d06565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b429092169190910217909255908601808352912054909116611f5857600054811015611f58578251600082815260046020908152604090912080549186015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b03909316929092171790555b5082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b80471015611ff25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610afa565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461203f576040519150601f19603f3d011682016040523d82523d6000602084013e612044565b606091505b5050905080610ab15760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610afa565b6040805160608101825260008082526020820181905291810191909152816000548110156121be57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906121bc5780516001600160a01b031615612152579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156121b7579392505050565b612152565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111ac8183612688565b600e5415612261576040516378a1f93760e11b815260040160405180910390fd5b81601b541461228357604051634cb61eaf60e11b815260040160405180910390fd5b6001600b5403818161229757612297612ef9565b06600101600e556040517f66b9f0d2f5af4125e8098bf5f1efc517ed46a70d8638734d186af310e2f8bc7590600090a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008486600060405160200161233b929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161236893929190612f94565b602060405180830381600087803b15801561238257600080fd5b505af1158015612396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ba9190612ea7565b506000838152600a6020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a090910190925281519183019190912093879052919052612416906001612e8f565b6000858152600a60205260409020556117f18482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a029061248b903390899088908890600401612fc5565b602060405180830381600087803b1580156124a557600080fd5b505af19250505080156124d5575060408051601f3d908101601f191682019092526124d291810190613001565b60015b612530573d808015612503576040519150601f19603f3d011682016040523d82523d6000602084013e612508565b606091505b508051612528576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b60606017805461094490612e15565b6060816125805750506040805180820190915260018152600360fc1b602082015290565b8160005b81156125aa57806125948161301e565b91506125a39050600a83613039565b9150612584565b60008167ffffffffffffffff8111156125c5576125c5612c2b565b6040519080825280601f01601f1916602001820160405280156125ef576020820181803683370190505b5090505b84156117f157612604600183612f62565b9150612611600a86612f0f565b61261c906030612e8f565b60f81b8183815181106126315761263161304d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061266b600a86613039565b94506125f3565b60008261267f85846126a2565b14949350505050565b6111ac82826040518060200160405280600081525061274e565b600081815b84518110156127465760008582815181106126c4576126c461304d565b60200260200101519050808311612706576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612733565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061273e8161301e565b9150506126a7565b509392505050565b610ab183838360016000546001600160a01b03851661277f57604051622e076360e81b815260040160405180910390fd5b8361279d5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b42909216919091021790558080850183801561284f57506001600160a01b0387163b15155b156128d8575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46128a06000888480600101955088612456565b6128bd576040516368d2bf6b60e11b815260040160405180910390fd5b808214156128555782600054146128d357600080fd5b61291e565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4808214156128d9575b50600055611f9b565b82805461293390612e15565b90600052602060002090601f016020900481019282612955576000855561299b565b82601f1061296e5782800160ff1982351617855561299b565b8280016001018555821561299b579182015b8281111561299b578235825591602001919060010190612980565b506129a79291506129ab565b5090565b5b808211156129a757600081556001016129ac565b6001600160e01b031981168114611cd857600080fd5b6000602082840312156129e857600080fd5b8135611782816129c0565b60005b83811015612a0e5781810151838201526020016129f6565b838111156114c25750506000910152565b60008151808452612a378160208601602086016129f3565b601f01601f19169290920160200192915050565b6020815260006117826020830184612a1f565b600060208284031215612a7057600080fd5b5035919050565b80356001600160a01b0381168114612a8e57600080fd5b919050565b60008060408385031215612aa657600080fd5b612aaf83612a77565b946020939093013593505050565b60008060208385031215612ad057600080fd5b823567ffffffffffffffff80821115612ae857600080fd5b818501915085601f830112612afc57600080fd5b813581811115612b0b57600080fd5b866020828501011115612b1d57600080fd5b60209290920196919550909350505050565b600080600060608486031215612b4457600080fd5b612b4d84612a77565b9250612b5b60208501612a77565b9150604084013590509250925092565b600060208284031215612b7d57600080fd5b61178282612a77565b600060208284031215612b9857600080fd5b81356002811061178257600080fd5b8015158114611cd857600080fd5b600060208284031215612bc757600080fd5b813561178281612ba7565b60008060408385031215612be557600080fd5b50508035926020909101359150565b60008060408385031215612c0757600080fd5b612c1083612a77565b91506020830135612c2081612ba7565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612c5757600080fd5b612c6085612a77565b9350612c6e60208601612a77565b925060408501359150606085013567ffffffffffffffff80821115612c9257600080fd5b818701915087601f830112612ca657600080fd5b813581811115612cb857612cb8612c2b565b604051601f8201601f19908116603f01168101908382118183101715612ce057612ce0612c2b565b816040528281528a6020848701011115612cf957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060408486031215612d3257600080fd5b83359250602084013567ffffffffffffffff80821115612d5157600080fd5b818601915086601f830112612d6557600080fd5b813581811115612d7457600080fd5b8760208260051b8501011115612d8957600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60028110612dd057634e487b7160e01b600052602160045260246000fd5b9052565b6020810161092f8284612db2565b60008060408385031215612df557600080fd5b612dfe83612a77565b9150612e0c60208401612a77565b90509250929050565b600181811c90821680612e2957607f821691505b602082108114156117f957634e487b7160e01b600052602260045260246000fd5b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612ea257612ea2612e79565b500190565b600060208284031215612eb957600080fd5b815161178281612ba7565b60008251612ed68184602087016129f3565b620c4def60eb1b92019182525064173539b7b760d91b6003820152600801919050565b634e487b7160e01b600052601260045260246000fd5b600082612f1e57612f1e612ef9565b500690565b60008351612f358184602088016129f3565b835190830190612f498183602088016129f3565b64173539b7b760d91b9101908152600501949350505050565b600082821015612f7457612f74612e79565b500390565b83815260208101839052606081016117f16040830184612db2565b6001600160a01b0384168152826020820152606060408201526000612fbc6060830184612a1f565b95945050505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612ff76080830184612a1f565b9695505050505050565b60006020828403121561301357600080fd5b8151611782816129c0565b600060001982141561303257613032612e79565b5060010190565b60008261304857613048612ef9565b500490565b634e487b7160e01b600052603260045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a";

type PawnBotsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PawnBotsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PawnBots__factory extends ContractFactory {
  constructor(...args: PawnBotsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    chainlinkToken_: string,
    merkleRoot_: BytesLike,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PawnBots> {
    return super.deploy(
      chainlinkToken_,
      merkleRoot_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    ) as Promise<PawnBots>;
  }
  getDeployTransaction(
    chainlinkToken_: string,
    merkleRoot_: BytesLike,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chainlinkToken_,
      merkleRoot_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    );
  }
  attach(address: string): PawnBots {
    return super.attach(address) as PawnBots;
  }
  connect(signer: Signer): PawnBots__factory {
    return super.connect(signer) as PawnBots__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PawnBotsInterface {
    return new utils.Interface(_abi) as PawnBotsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PawnBots {
    return new Contract(address, _abi, signerOrProvider) as PawnBots;
  }
}
