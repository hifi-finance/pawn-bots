/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PawnBots, PawnBotsInterface } from "../PawnBots";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "currency_",
        type: "address",
      },
      {
        internalType: "address",
        name: "chainlinkToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vrfFee_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vrfKeyHash_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PawnBots__EligibilityExceededForPrivatePhase",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__InsufficientCurrencySent",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxElementsExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxMintsPerTxExceededForPublicPhase",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NotWhitelistedForPrivatePhase",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__OffsetAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RandomnessAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SaleIsActive",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__SaleIsNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__VrfRequestIdMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "BurnUnsold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "PauseSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "Reserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "oldBaseURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "SetBaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMaxPublicMintsPerTx",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxPublicMintsPerTx",
        type: "uint256",
      },
    ],
    name: "SetMaxPublicMintsPerTx",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "oldProvenanceHash",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "SetProvenanceHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eligibleAmount",
        type: "uint256",
      },
    ],
    name: "SetWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "StartSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLECTION_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRIVATE_SALE_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "burnUnsold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxElements",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPublicMintsPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleIsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxPublicMintsPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxPublicMintsPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "setProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "eligibleAmount",
        type: "uint256",
      },
    ],
    name: "setWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eligibleAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052612710600e553480156200001757600080fd5b5060405162003584380380620035848339810160408190526200003a9162000212565b60408051808201825260098152685061776e20426f747360b81b602080830191825283518085019094526004845263424f545360e01b908401528151869388939290916200008b9160009162000153565b508051620000a190600190602084019062000153565b505050620000be620000b8620000fd60201b60201c565b62000101565b6001600b556001600160a01b0391821660a0528116608052600d80546001600160a01b03191696909116959095179094556017555050601855620002b4565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001619062000277565b90600052602060002090601f016020900481019282620001855760008555620001d0565b82601f10620001a057805160ff1916838001178555620001d0565b82800160010185558215620001d0579182015b82811115620001d0578251825591602001919060010190620001b3565b50620001de929150620001e2565b5090565b5b80821115620001de5760008155600101620001e3565b6001600160a01b03811681146200020f57600080fd5b50565b600080600080600060a086880312156200022b57600080fd5b85516200023881620001f9565b60208701519095506200024b81620001f9565b60408701519094506200025e81620001f9565b6060870151608090970151959894975095949392505050565b600181811c908216806200028c57607f821691505b60208210811415620002ae57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516132a3620002e1600039600081816113b40152612225015260006121f601526132a36000f3fe608060405234801561001057600080fd5b50600436106102e95760003560e01c80638d814a8c11610191578063b66a0e5d116100e3578063d8258d9511610097578063eb8d244411610071578063eb8d2444146105fd578063ef4d3bbf1461060a578063f2fde38b1461061357600080fd5b8063d8258d95146105a5578063e5a6b10f146105ae578063e985e9c5146105c157600080fd5b8063c6ab67a3116100c8578063c6ab67a314610581578063c87b56dd14610589578063d55565441461059c57600080fd5b8063b66a0e5d14610566578063b88d4fde1461056e57600080fd5b80639b19251a11610145578063a22cb4651161011f578063a22cb46514610538578063a475b5dd1461054b578063ac8154de1461055357600080fd5b80639b19251a146104cc578063a035b1fe1461051c578063a0712d681461052557600080fd5b806391b7f5ed1161017657806391b7f5ed1461049e57806394985ddd146104b157806395d89b41146104c457600080fd5b80638d814a8c1461047a5780638da5cb5b1461048d57600080fd5b806342842e0e1161024a57806355f804b3116101fe578063715018a6116101d8578063715018a614610455578063819b25ba1461045d5780638b3f520e1461047057600080fd5b806355f804b31461041c5780636352211e1461042f57806370a082311461044257600080fd5b806351cff8d91161022f57806351cff8d9146103f857806355367ba91461040b578063558fa0f51461041357600080fd5b806342842e0e146103d25780634f6ccce7146103e557600080fd5b806318160ddd116102a15780631cbaee2d116102865780631cbaee2d146103a357806323b872dd146103ac5780632f745c59146103bf57600080fd5b806318160ddd1461037e5780631bbc2eac1461039057600080fd5b8063081812fc116102d2578063081812fc1461032b578063095ea7b314610356578063109695231461036b57600080fd5b806301ffc9a7146102ee57806306fdde0314610316575b600080fd5b6103016102fc366004612b38565b610626565b60405190151581526020015b60405180910390f35b61031e610651565b60405161030d9190612bad565b61033e610339366004612bc0565b6106e3565b6040516001600160a01b03909116815260200161030d565b610369610364366004612bf5565b61077d565b005b610369610379366004612cbe565b610893565b6008545b60405190815260200161030d565b61036961039e366004612bc0565b6109be565b61038260145481565b6103696103ba366004612d07565b610a44565b6103826103cd366004612bf5565b610acb565b6103696103e0366004612d07565b610b73565b6103826103f3366004612bc0565b610b8e565b610369610406366004612d43565b610c32565b610369610dc6565b610382600e5481565b61036961042a366004612cbe565b610e66565b61033e61043d366004612bc0565b610f85565b610382610450366004612d43565b611010565b6103696110aa565b61036961046b366004612bc0565b6110fe565b6103826201518081565b610369610488366004612d5e565b6111e1565b600a546001600160a01b031661033e565b6103696104ac366004612bc0565b611323565b6103696104bf366004612e11565b6113a9565b61031e61142f565b6104ff6104da366004612d43565b60156020526000908152604090208054600182015460029092015460ff909116919083565b60408051931515845260208401929092529082015260600161030d565b61038260115481565b610369610533366004612bc0565b61143e565b610369610546366004612e41565b611657565b610369611662565b610369610561366004612bc0565b611728565b610369611810565b61036961057c366004612e78565b6118c0565b61031e61194e565b61031e610597366004612bc0565b6119dc565b61038260105481565b61038261271081565b600d5461033e906001600160a01b031681565b6103016105cf366004612ef4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6013546103019060ff1681565b610382600f5481565b610369610621366004612d43565b611ae7565b60006001600160e01b0319821663780e9d6360e01b148061064b575061064b82611bb7565b92915050565b60606000805461066090612f27565b80601f016020809104026020016040519081016040528092919081815260200182805461068c90612f27565b80156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107615760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061078882610f85565b9050806001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610758565b336001600160a01b0382161480610812575061081281336105cf565b6108845760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610758565b61088e8383611c07565b505050565b600a546001600160a01b031633146108db5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b6000601280546108ea90612f27565b80601f016020809104026020016040519081016040528092919081815260200182805461091690612f27565b80156109635780601f1061093857610100808354040283529160200191610963565b820191906000526020600020905b81548152906001019060200180831161094657829003601f168201915b5050855193945061097f93601293506020870192509050612a89565b507fc4311042a96a9c4f960b3302d295025570752c3abc207ced6a57a8fa0dcbf31c8160126040516109b2929190612f5c565b60405180910390a15050565b600a546001600160a01b03163314610a065760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b600f80549082905560408051828152602081018490527f92207dfd657891027f5b9ab598e3a6c4924df8158a6a048ba55a9f6354f619dc91016109b2565b610a4e3382611c75565b610ac05760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610758565b61088e838383611d68565b6000610ad683611010565b8210610b4a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610758565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61088e838383604051806020016040528060008152506118c0565b6000610b9960085490565b8210610c0d5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610758565b60088281548110610c2057610c2061301a565b90600052602060002001549050919050565b600a546001600160a01b03163314610c7a5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b158015610cbe57600080fd5b505afa158015610cd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf69190613030565b600d5460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb90604401602060405180830381600087803b158015610d4657600080fd5b505af1158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190613049565b50816001600160a01b03167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436482604051610dba91815260200190565b60405180910390a25050565b600a546001600160a01b03163314610e0e5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b60135460ff16610e3157604051637778250b60e01b815260040160405180910390fd5b6013805460ff191690556040517f1aadb89fe0887ac16ce54a382201c6cd7db3a9930eae4ff5035a3d9e0d59eb6990600090a1565b600a546001600160a01b03163314610eae5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b600060168054610ebd90612f27565b80601f0160208091040260200160405190810160405280929190818152602001828054610ee990612f27565b8015610f365780601f10610f0b57610100808354040283529160200191610f36565b820191906000526020600020905b815481529060010190602001808311610f1957829003601f168201915b50508551939450610f5293601693506020870192509050612a89565b507fc73341c723fd9197b17090f0c077cf2bbe4d89f2f7d71969b3a7e5c50d570a388160166040516109b2929190612f5c565b6000818152600260205260408120546001600160a01b03168061064b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610758565b60006001600160a01b03821661108e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610758565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b031633146110f25760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b6110fc6000611f27565b565b600a546001600160a01b031633146111465760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b600061115160085490565b600e54909150611161828461307c565b11156111805760405163cfef55b560e01b815260040160405180910390fd5b60005b828110156111b05761119e33611199838561307c565b611f79565b806111a881613094565b915050611183565b506040518281527fdb7b64a879507c32bda4d0cf22dee29ed875c7157ecbbc10fe11bf14fab06d12906020016109b2565b600a546001600160a01b031633146112295760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b60005b82518110156112dd5761125b604051806060016040528060001515815260200160008152602001600081525090565b6001815260408101839052835181906015906000908790869081106112825761128261301a565b6020908102919091018101516001600160a01b031682528181019290925260409081016000208351815460ff1916901515178155918301516001830155919091015160029091015550806112d581613094565b91505061122c565b50816040516112ec91906130af565b604051908190038120828252907fbe6c62025567ebab58e3a9200f498444d587f8c2b1a91b941e8d1b8772318ded90602001610dba565b600a546001600160a01b0316331461136b5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b601180549082905560408051828152602081018490527ff9317dc3bc6dda0e00e43855c2c30847aeafb8dcea9d2ce86e9ce7a83d549f0191016109b2565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114215760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610758565b61142b8282611f93565b5050565b60606001805461066090612f27565b6002600b5414156114915760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610758565b6002600b5560135460ff166114b957604051637778250b60e01b815260040160405180910390fd5b600e546008546114c9908361307c565b11156114e85760405163cfef55b560e01b815260040160405180910390fd5b620151806014546114f9919061307c565b421161159f573360009081526015602052604090205460ff1661152f57604051630c234af360e41b815260040160405180910390fd5b336000908152601560205260409020600181015460029091015461155391906130ee565b811115611572576040516230861d60e41b815260040160405180910390fd5b336000908152601560205260408120600101805483929061159490849061307c565b909155506115c29050565b600f548111156115c257604051635d95435760e01b815260040160405180910390fd5b6000816011546115d29190613105565b90506115dd81611fff565b60005b828110156116125760006115f360085490565b90506115ff3382611f79565b508061160a81613094565b9150506115e0565b50604080518381526020810183905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600b55565b61142b338383612123565b600a546001600160a01b031633146116aa5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b601054156116cb576040516378a1f93760e11b815260040160405180910390fd5b601954156116ec576040516384049d1360e01b815260040160405180910390fd5b6116fa6018546017546121f2565b6019556040517f66b9f0d2f5af4125e8098bf5f1efc517ed46a70d8638734d186af310e2f8bc7590600090a1565b600a546001600160a01b031633146117705760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b60135460ff1615611794576040516327f03deb60e11b815260040160405180910390fd5b600e546008546117a4908361307c565b11156117c35760405163cfef55b560e01b815260040160405180910390fd5b80600e60008282546117d591906130ee565b90915550506040518181527f53b473a43fb77f7bf8d1542c780b0ddd21b4803bfe6e2f156329101b0481e1b99060200160405180910390a150565b600a546001600160a01b031633146118585760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b60135460ff161561187c576040516327f03deb60e11b815260040160405180910390fd5b60145461188857426014555b6013805460ff191660011790556040517f03225f4cd13ea3e399c581b9799447ace26a69238cbb7a04a8ff0d0cc2c7bae590600090a1565b6118ca3383611c75565b61193c5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610758565b6119488484848461237d565b50505050565b6012805461195b90612f27565b80601f016020809104026020016040519081016040528092919081815260200182805461198790612f27565b80156119d45780601f106119a9576101008083540402835291602001916119d4565b820191906000526020600020905b8154815290600101906020018083116119b757829003601f168201915b505050505081565b6000818152600260205260409020546060906001600160a01b0316611a1457604051636d23a94560e11b815260040160405180910390fd5b6000611a1e6123fb565b905060105460001415611a71576000815111611a495760405180602001604052806000815250611a6a565b80604051602001611a5a9190613124565b6040516020818303038152906040525b9392505050565b600061271060105485611a84919061307c565b611a8e919061316f565b90506000825111611aae5760405180602001604052806000815250611ad9565b81611ab88261240a565b604051602001611ac9929190613183565b6040516020818303038152906040525b949350505050565b50919050565b600a546001600160a01b03163314611b2f5760405162461bcd60e51b815260206004820181905260248201526000805160206132778339815191526044820152606401610758565b6001600160a01b038116611bab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610758565b611bb481611f27565b50565b60006001600160e01b031982166380ac58cd60e01b1480611be857506001600160e01b03198216635b5e139f60e01b145b8061064b57506301ffc9a760e01b6001600160e01b031983161461064b565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611c3c82610f85565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611cee5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610758565b6000611cf983610f85565b9050806001600160a01b0316846001600160a01b03161480611d345750836001600160a01b0316611d29846106e3565b6001600160a01b0316145b80611ad957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611ad9565b826001600160a01b0316611d7b82610f85565b6001600160a01b031614611df75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610758565b6001600160a01b038216611e595760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610758565b611e64838383612520565b611e6f600082611c07565b6001600160a01b0383166000908152600360205260408120805460019290611e989084906130ee565b90915550506001600160a01b0382166000908152600360205260408120805460019290611ec690849061307c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61142b8282604051806020016040528060008152506125d8565b60105415611fb4576040516378a1f93760e11b815260040160405180910390fd5b8160195414611fd657604051634cb61eaf60e11b815260040160405180910390fd5b611fe360016127106130ee565b611fed908261316f565b611ff890600161307c565b6010555050565b600d546040516370a0823160e01b815233600482015282916001600160a01b0316906370a082319060240160206040518083038186803b15801561204257600080fd5b505afa158015612056573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207a9190613030565b101561209957604051634ba2da1f60e01b815260040160405180910390fd5b600d546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156120eb57600080fd5b505af11580156120ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b9190613049565b816001600160a01b0316836001600160a01b031614156121855760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610758565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001612262929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161228f939291906131c2565b602060405180830381600087803b1580156122a957600080fd5b505af11580156122bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e19190613049565b506000838152600c6020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a09091019092528151918301919091209387905291905261233d90600161307c565b6000858152600c6020526040902055611ad98482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b612388848484611d68565b61239484848484612656565b6119485760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610758565b60606016805461066090612f27565b60608161242e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612458578061244281613094565b91506124519050600a836131f3565b9150612432565b60008167ffffffffffffffff81111561247357612473612c1f565b6040519080825280601f01601f19166020018201604052801561249d576020820181803683370190505b5090505b8415611ad9576124b26001836130ee565b91506124bf600a8661316f565b6124ca90603061307c565b60f81b8183815181106124df576124df61301a565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612519600a866131f3565b94506124a1565b6001600160a01b03831661257b5761257681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61259e565b816001600160a01b0316836001600160a01b03161461259e5761259e83826127ab565b6001600160a01b0382166125b55761088e81612848565b826001600160a01b0316826001600160a01b03161461088e5761088e82826128f7565b6125e2838361293b565b6125ef6000848484612656565b61088e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610758565b60006001600160a01b0384163b156127a357604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061269a903390899088908890600401613207565b602060405180830381600087803b1580156126b457600080fd5b505af19250505080156126e4575060408051601f3d908101601f191682019092526126e191810190613243565b60015b612789573d808015612712576040519150601f19603f3d011682016040523d82523d6000602084013e612717565b606091505b5080516127815760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610758565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611ad9565b506001611ad9565b600060016127b884611010565b6127c291906130ee565b600083815260076020526040902054909150808214612815576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061285a906001906130ee565b600083815260096020526040812054600880549394509092849081106128825761288261301a565b9060005260206000200154905080600883815481106128a3576128a361301a565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806128db576128db613260565b6001900381819060005260206000200160009055905550505050565b600061290283611010565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166129915760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610758565b6000818152600260205260409020546001600160a01b0316156129f65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610758565b612a0260008383612520565b6001600160a01b0382166000908152600360205260408120805460019290612a2b90849061307c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054612a9590612f27565b90600052602060002090601f016020900481019282612ab75760008555612afd565b82601f10612ad057805160ff1916838001178555612afd565b82800160010185558215612afd579182015b82811115612afd578251825591602001919060010190612ae2565b50612b09929150612b0d565b5090565b5b80821115612b095760008155600101612b0e565b6001600160e01b031981168114611bb457600080fd5b600060208284031215612b4a57600080fd5b8135611a6a81612b22565b60005b83811015612b70578181015183820152602001612b58565b838111156119485750506000910152565b60008151808452612b99816020860160208601612b55565b601f01601f19169290920160200192915050565b602081526000611a6a6020830184612b81565b600060208284031215612bd257600080fd5b5035919050565b80356001600160a01b0381168114612bf057600080fd5b919050565b60008060408385031215612c0857600080fd5b612c1183612bd9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612c5e57612c5e612c1f565b604052919050565b600067ffffffffffffffff831115612c8057612c80612c1f565b612c93601f8401601f1916602001612c35565b9050828152838383011115612ca757600080fd5b828260208301376000602084830101529392505050565b600060208284031215612cd057600080fd5b813567ffffffffffffffff811115612ce757600080fd5b8201601f81018413612cf857600080fd5b611ad984823560208401612c66565b600080600060608486031215612d1c57600080fd5b612d2584612bd9565b9250612d3360208501612bd9565b9150604084013590509250925092565b600060208284031215612d5557600080fd5b611a6a82612bd9565b60008060408385031215612d7157600080fd5b823567ffffffffffffffff80821115612d8957600080fd5b818501915085601f830112612d9d57600080fd5b8135602082821115612db157612db1612c1f565b8160051b9250612dc2818401612c35565b8281529284018101928181019089851115612ddc57600080fd5b948201945b84861015612e0157612df286612bd9565b82529482019490820190612de1565b9997909101359750505050505050565b60008060408385031215612e2457600080fd5b50508035926020909101359150565b8015158114611bb457600080fd5b60008060408385031215612e5457600080fd5b612e5d83612bd9565b91506020830135612e6d81612e33565b809150509250929050565b60008060008060808587031215612e8e57600080fd5b612e9785612bd9565b9350612ea560208601612bd9565b925060408501359150606085013567ffffffffffffffff811115612ec857600080fd5b8501601f81018713612ed957600080fd5b612ee887823560208401612c66565b91505092959194509250565b60008060408385031215612f0757600080fd5b612f1083612bd9565b9150612f1e60208401612bd9565b90509250929050565b600181811c90821680612f3b57607f821691505b60208210811415611ae157634e487b7160e01b600052602260045260246000fd5b604081526000612f6f6040830185612b81565b6020838203818501526000855481600182811c915080831680612f9357607f831692505b858310811415612fb157634e487b7160e01b85526022600452602485fd5b828752602087019650808015612fce5760018114612fdf5761300a565b60ff1985168852868801955061300a565b60008b81526020902060005b858110156130045781548a820152908401908801612feb565b89019650505b50939a9950505050505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561304257600080fd5b5051919050565b60006020828403121561305b57600080fd5b8151611a6a81612e33565b634e487b7160e01b600052601160045260246000fd5b6000821982111561308f5761308f613066565b500190565b60006000198214156130a8576130a8613066565b5060010190565b815160009082906020808601845b838110156130e25781516001600160a01b0316855293820193908201906001016130bd565b50929695505050505050565b60008282101561310057613100613066565b500390565b600081600019048311821515161561311f5761311f613066565b500290565b60008251613136818460208701612b55565b620c4def60eb1b92019182525064173539b7b760d91b6003820152600801919050565b634e487b7160e01b600052601260045260246000fd5b60008261317e5761317e613159565b500690565b60008351613195818460208801612b55565b8351908301906131a9818360208801612b55565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b03841681528260208201526060604082015260006131ea6060830184612b81565b95945050505050565b60008261320257613202613159565b500490565b60006001600160a01b038087168352808616602084015250836040830152608060608301526132396080830184612b81565b9695505050505050565b60006020828403121561325557600080fd5b8151611a6a81612b22565b634e487b7160e01b600052603160045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a";

type PawnBotsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PawnBotsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PawnBots__factory extends ContractFactory {
  constructor(...args: PawnBotsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    currency_: string,
    chainlinkToken_: string,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PawnBots> {
    return super.deploy(
      currency_,
      chainlinkToken_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    ) as Promise<PawnBots>;
  }
  getDeployTransaction(
    currency_: string,
    chainlinkToken_: string,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      currency_,
      chainlinkToken_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    );
  }
  attach(address: string): PawnBots {
    return super.attach(address) as PawnBots;
  }
  connect(signer: Signer): PawnBots__factory {
    return super.connect(signer) as PawnBots__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PawnBotsInterface {
    return new utils.Interface(_abi) as PawnBotsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PawnBots {
    return new Contract(address, _abi, signerOrProvider) as PawnBots;
  }
}
