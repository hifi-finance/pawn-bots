/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PawnBots, PawnBotsInterface } from "../PawnBots";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chainlinkToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vrfFee_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vrfKeyHash_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__AccountNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxPerAccountExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MintNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MintNotPaused",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MintPhaseMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NotEnoughMftBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__OffsetAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RandomnessAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RemainingMintsExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RemainingReserveExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__TooEarlyToReveal",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__VrfRequestIdMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "BurnUnsold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IPawnBots.MintPhase",
        name: "phase",
        type: "uint8",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "Reserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "SetBaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newMaxPerAccount",
        type: "uint256",
      },
    ],
    name: "SetMaxPerAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "SetMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "newMintActive",
        type: "bool",
      },
    ],
    name: "SetMintActive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPawnBots.MintPhase",
        name: "newMintPhase",
        type: "uint8",
      },
    ],
    name: "SetMintPhase",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "SetProvenanceHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "SetRevealTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLECTION_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MFT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESERVE_CAP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
    ],
    name: "burnUnsold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerAccount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPhase",
    outputs: [
      {
        internalType: "enum IPawnBots.MintPhase",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "mintPrivate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mintPublic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newMaxPerAccount",
        type: "uint256",
      },
    ],
    name: "setMaxPerAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newMintActive",
        type: "bool",
      },
    ],
    name: "setMintActive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPawnBots.MintPhase",
        name: "newMintPhase",
        type: "uint8",
      },
    ],
    name: "setMintPhase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "setProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "setRevealTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002c1538038062002c158339810160408190526200003591620001ff565b60408051808201825260098152685061776e20426f747360b81b602080830191825283518085019094526004845263424f545360e01b9084015281518693889392909162000086916002916200013c565b5080516200009c9060039060208401906200013c565b50506000805550620000ae33620000ea565b60016009556001600160a01b0391821660a05216608052620000d56108346122b862000247565b600d5560c09190915260e05250620002aa9050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200014a906200026d565b90600052602060002090601f0160209004810192826200016e5760008555620001b9565b82601f106200018957805160ff1916838001178555620001b9565b82800160010185558215620001b9579182015b82811115620001b95782518255916020019190600101906200019c565b50620001c7929150620001cb565b5090565b5b80821115620001c75760008155600101620001cc565b80516001600160a01b0381168114620001fa57600080fd5b919050565b600080600080608085870312156200021657600080fd5b6200022185620001e2565b93506200023160208601620001e2565b6040860151606090960151949790965092505050565b6000828210156200026857634e487b7160e01b600052601160045260246000fd5b500390565b600181811c908216806200028257607f821691505b60208210811415620002a457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e05161292a620002eb6000396000610ec301526000610ee4015260008181610cf10152611bfd01526000611bce015261292a6000f3fe608060405234801561001057600080fd5b50600436106102de5760003560e01c80637cb6475911610186578063bf613202116100e3578063d555654411610097578063ee1cc94411610071578063ee1cc944146105c7578063efd0cbf9146105da578063f2fde38b146105ed57600080fd5b8063d555654414610579578063d8258d9514610582578063e985e9c51461058b57600080fd5b8063c6ab67a3116100c8578063c6ab67a31461054b578063c87b56dd14610553578063cd2275d31461056657600080fd5b8063bf6132021461052f578063c1e285071461053857600080fd5b8063a475b5dd1161013a578063b7c0007d1161011f578063b7c0007d1461050a578063b88d4fde14610513578063ba829d711461052657600080fd5b8063a475b5dd146104ef578063ac8154de146104f757600080fd5b806394985ddd1161016b57806394985ddd146104c157806395d89b41146104d4578063a22cb465146104dc57600080fd5b80637cb647591461049d5780638da5cb5b146104b057600080fd5b806325fd90f31161023f57806355f804b3116101f357806370a08231116101cd57806370a0823114610479578063715018a61461048c57806376c71ca11461049457600080fd5b806355f804b3146104385780636352211e1461044b57806369ebbe2e1461045e57600080fd5b806342842e0e1161022457806342842e0e146104095780634c1303ad1461041c5780634c81433f1461042f57600080fd5b806325fd90f3146103e957806331c07bbf146103f657600080fd5b8063109695231161029657806318160ddd1161027b57806318160ddd146103a05780631e7269c5146103b657806323b872dd146103d657600080fd5b8063109695231461037357806317881cbf1461038657600080fd5b806306fdde03116102c757806306fdde0314610320578063081812fc14610335578063095ea7b31461036057600080fd5b806301ffc9a7146102e357806303339bcb1461030b575b600080fd5b6102f66102f1366004612253565b610600565b60405190151581526020015b60405180910390f35b61031e61031936600461228c565b610652565b005b610328610783565b6040516103029190612310565b610348610343366004612323565b610815565b6040516001600160a01b039091168152602001610302565b61031e61036e36600461233c565b610859565b61031e610381366004612366565b610956565b600f546103939060ff1681565b6040516103029190612410565b600154600054035b604051908152602001610302565b6103a86103c436600461241e565b600e6020526000908152604090205481565b61031e6103e4366004612439565b6109e8565b600c546102f69060ff1681565b61031e610404366004612475565b6109f8565b61031e610417366004612439565b610a9d565b61031e61042a366004612323565b610ab8565b6103a860125481565b61031e610446366004612366565b610b35565b610348610459366004612323565b610bbb565b61034873df2c7238198ad8b389666574f2d8bc411a4b742881565b6103a861048736600461241e565b610bc6565b61031e610c15565b6103a8600d5481565b61031e6104ab366004612323565b610c69565b6008546001600160a01b0316610348565b61031e6104cf366004612496565b610ce6565b610328610d6c565b61031e6104ea3660046124c6565b610d7b565b61031e610e11565b61031e610505366004612323565b610f0d565b6103a861083481565b61031e610521366004612513565b610ff2565b6103a860135481565b6103a8600b5481565b61031e610546366004612323565b61103c565b6103286110b9565b610328610561366004612323565b611147565b61031e6105743660046125ef565b611204565b6103a860105481565b6103a86122b881565b6102f661059936600461266e565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61031e6105d5366004612698565b6114dc565b61031e6105e8366004612323565b611565565b61031e6105fb36600461241e565b6117a9565b60006301ffc9a760e01b6001600160e01b03198316148061063157506380ac58cd60e01b6001600160e01b03198316145b8061064c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6008546001600160a01b0316331461069f5760405162461bcd60e51b815260206004820181905260248201526000805160206128fe83398151915260448201526064015b60405180910390fd5b600260095414156106f25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610696565b60026009556012546108349061070890846126cb565b111561072757604051630430d4d560e31b815260040160405180910390fd5b60128054830190556107398183611879565b604080518381526001600160a01b03831660208201527fe07b37f6900c87d3cd8286132ac5338a36554df47294fd99f8246898a28d0e18910160405180910390a150506001600955565b606060028054610792906126e3565b80601f01602080910402602001604051908101604052809291908181526020018280546107be906126e3565b801561080b5780601f106107e05761010080835404028352916020019161080b565b820191906000526020600020905b8154815290600101906020018083116107ee57829003601f168201915b5050505050905090565b600061082082611893565b61083d576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610864826118ba565b9050806001600160a01b0316836001600160a01b031614156108995760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146108ed576001600160a01b038116600090815260076020908152604080832033845290915290205460ff166108ed576040516367d9dca160e11b815260040160405180910390fd5b600082815260066020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6008546001600160a01b0316331461099e5760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b6109aa601183836121a4565b507f6760362308ca665d8ad5234d7f09a8ac815ee45be8350cad464cb1e4eadd34ee82826040516109dc92919061271e565b60405180910390a15050565b6109f3838383611922565b505050565b6008546001600160a01b03163314610a405760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b600f805482919060ff191660018381811115610a5e57610a5e6123d8565b02179055507f47621e9ccf7ebe854eb1011a629933211171e1c06fe991fef611bafbdae1994781604051610a929190612410565b60405180910390a150565b6109f383838360405180602001604052806000815250610ff2565b6008546001600160a01b03163314610b005760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b600b8190556040518181527f598688b36a76ae127134b4ccadb980f6ee03d2673852286b5eca91bf411a9da190602001610a92565b6008546001600160a01b03163314610b7d5760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b610b89601483836121a4565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa82826040516109dc92919061271e565b600061064c826118ba565b60006001600160a01b038216610bef576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6008546001600160a01b03163314610c5d5760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b610c676000611af0565b565b6008546001600160a01b03163314610cb15760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b60158190556040518181527f914960aef5e033ce5cae8a7992d4b7a6f0f9741227b66acb67c605b7019f8a4690602001610a92565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d5e5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610696565b610d688282611b4f565b5050565b606060038054610792906126e3565b6001600160a01b038216331415610da55760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314610e595760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b601354421015610e7c57604051630bfa01e360e41b815260040160405180910390fd5b60105415610e9d576040516378a1f93760e11b815260040160405180910390fd5b60165415610ebe576040516384049d1360e01b815260040160405180910390fd5b610f087f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611bca565b601655565b6008546001600160a01b03163314610f555760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b600c5460ff1615610f79576040516331265e8560e21b815260040160405180910390fd5b601254600d54610f8991906126cb565b60015460005403610f9a90836126cb565b1115610fb957604051635218146960e01b815260040160405180910390fd5b600d805482900390556040518181527f53b473a43fb77f7bf8d1542c780b0ddd21b4803bfe6e2f156329101b0481e1b990602001610a92565b610ffd848484611922565b6001600160a01b0383163b156110365761101984848484611d55565b611036576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b6008546001600160a01b031633146110845760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b60138190556040518181527fd3c27564aa5824adeda19a9566eef46a5885ecd23d94587892f87a30f3720c1690602001610a92565b601180546110c6906126e3565b80601f01602080910402602001604051908101604052809291908181526020018280546110f2906126e3565b801561113f5780601f106111145761010080835404028352916020019161113f565b820191906000526020600020905b81548152906001019060200180831161112257829003601f168201915b505050505081565b606061115282611893565b61116f57604051636d23a94560e11b815260040160405180910390fd5b6000611179611e4c565b601054909150806111cb5760008251116111a257604051806020016040528060008152506111c3565b816040516020016111b3919061274d565b6040516020818303038152906040525b949350505050565b60008251116111e957604051806020016040528060008152506111c3565b816111f385611e5b565b6040516020016111b3929190612774565b600260095414156112575760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610696565b6002600955600c5460ff1661127f5760405163902bc9f160e01b815260040160405180910390fd5b6000600f5460ff166001811115611298576112986123d8565b146112b65760405163447d275d60e01b815260040160405180910390fd5b61132b828280806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506015546040516bffffffffffffffffffffffff193360601b166020820152909250603401905060405160208183030381529060405280519060200120611f71565b61134857604051630ceaa9b160e21b815260040160405180910390fd5b600b54336000908152600e602052604090205461136590856126cb565b1115611384576040516318ab8a5b60e11b815260040160405180910390fd5b601254600d5461139491906126cb565b600154600054036113a590856126cb565b11156113c457604051635218146960e01b815260040160405180910390fd5b6040516370a0823160e01b8152336004820152670de0b6b3a76400009073df2c7238198ad8b389666574f2d8bc411a4b7428906370a082319060240160206040518083038186803b15801561141857600080fd5b505afa15801561142c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145091906127a3565b101561146f5760405163fd287c5160e01b815260040160405180910390fd5b336000818152600e6020526040902080548501905561148e9084611879565b336001600160a01b03167f29600984795369456176b31dad545cb35585021faea93dcc568a467a737ad4258460006040516114ca9291906127bc565b60405180910390a25050600160095550565b6008546001600160a01b031633146115245760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b600c805460ff19168215159081179091556040519081527f10dd3df47a7d67c5514698acca91f99855d07a108b93cbdb437697823b0c5e5790602001610a92565b600260095414156115b85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610696565b6002600955600c5460ff166115e05760405163902bc9f160e01b815260040160405180910390fd5b6001600f5460ff1660018111156115f9576115f96123d8565b146116175760405163447d275d60e01b815260040160405180910390fd5b600b54336000908152600e602052604090205461163490836126cb565b1115611653576040516318ab8a5b60e11b815260040160405180910390fd5b601254600d5461166391906126cb565b6001546000540361167490836126cb565b111561169357604051635218146960e01b815260040160405180910390fd5b6040516370a0823160e01b8152336004820152670de0b6b3a76400009073df2c7238198ad8b389666574f2d8bc411a4b7428906370a082319060240160206040518083038186803b1580156116e757600080fd5b505afa1580156116fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171f91906127a3565b101561173e5760405163fd287c5160e01b815260040160405180910390fd5b336000818152600e6020526040902080548301905561175d9082611879565b336001600160a01b03167f29600984795369456176b31dad545cb35585021faea93dcc568a467a737ad4258260016040516117999291906127bc565b60405180910390a2506001600955565b6008546001600160a01b031633146117f15760405162461bcd60e51b815260206004820181905260248201526000805160206128fe8339815191526044820152606401610696565b6001600160a01b03811661186d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610696565b61187681611af0565b50565b610d68828260405180602001604052806000815250611f87565b600080548210801561064c575050600090815260046020526040902054600160e01b161590565b60008160005481101561190957600081815260046020526040902054600160e01b8116611907575b806119005750600019016000818152600460205260409020546118e2565b9392505050565b505b604051636f96cda160e11b815260040160405180910390fd5b600061192d826118ba565b9050836001600160a01b0316816001600160a01b0316146119605760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061199c57506001600160a01b038516600090815260076020908152604080832033845290915290205460ff165b806119b75750336119ac84610815565b6001600160a01b0316145b9050806119d757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0384166119fe57604051633a954ecd60e21b815260040160405180910390fd5b6000838152600660209081526040808320805473ffffffffffffffffffffffffffffffffffffffff191690556001600160a01b038881168452600583528184208054600019019055871683528083208054600101905585835260049091529020600160e11b4260a01b861781179091558216611aa85760018301600081815260046020526040902054611aa6576000548114611aa65760008181526004602052604090208390555b505b82846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b600880546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60105415611b70576040516378a1f93760e11b815260040160405180910390fd5b8160165414611b9257604051634cb61eaf60e11b815260040160405180910390fd5b6122b781066001016010556040517f66b9f0d2f5af4125e8098bf5f1efc517ed46a70d8638734d186af310e2f8bc7590600090a15050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611c3a929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611c67939291906127e6565b602060405180830381600087803b158015611c8157600080fd5b505af1158015611c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb99190612817565b506000838152600a6020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a090910190925281519183019190912093879052919052611d159060016126cb565b6000858152600a60205260409020556111c38482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611d8a903390899088908890600401612834565b602060405180830381600087803b158015611da457600080fd5b505af1925050508015611dd4575060408051601f3d908101601f19168201909252611dd191810190612870565b60015b611e2f573d808015611e02576040519150601f19603f3d011682016040523d82523d6000602084013e611e07565b606091505b508051611e27576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060148054610792906126e3565b606081611e7f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ea95780611e938161288d565b9150611ea29050600a836128a8565b9150611e83565b60008167ffffffffffffffff811115611ec457611ec46124fd565b6040519080825280601f01601f191660200182016040528015611eee576020820181803683370190505b5090505b84156111c357611f036001836128bc565b9150611f10600a866128d3565b611f1b9060306126cb565b60f81b818381518110611f3057611f306128e7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611f6a600a866128a8565b9450611ef2565b600082611f7e85846120f8565b14949350505050565b6000546001600160a01b038416611fb057604051622e076360e81b815260040160405180910390fd5b82611fce5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b03841660008181526005602090815260408083208054680100000000000000018902019055848352600490915290204260a01b86176001861460e11b1790558190818501903b156120a3575b60405182906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a461206c6000878480600101955087611d55565b612089576040516368d2bf6b60e11b815260040160405180910390fd5b80821061202157826000541461209e57600080fd5b6120e8565b5b6040516001830192906001600160a01b038816906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a48082106120a4575b5060009081556110369085838684565b600081815b845181101561219c57600085828151811061211a5761211a6128e7565b6020026020010151905080831161215c576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250612189565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806121948161288d565b9150506120fd565b509392505050565b8280546121b0906126e3565b90600052602060002090601f0160209004810192826121d25760008555612218565b82601f106121eb5782800160ff19823516178555612218565b82800160010185558215612218579182015b828111156122185782358255916020019190600101906121fd565b50612224929150612228565b5090565b5b808211156122245760008155600101612229565b6001600160e01b03198116811461187657600080fd5b60006020828403121561226557600080fd5b81356119008161223d565b80356001600160a01b038116811461228757600080fd5b919050565b6000806040838503121561229f57600080fd5b823591506122af60208401612270565b90509250929050565b60005b838110156122d35781810151838201526020016122bb565b838111156110365750506000910152565b600081518084526122fc8160208601602086016122b8565b601f01601f19169290920160200192915050565b60208152600061190060208301846122e4565b60006020828403121561233557600080fd5b5035919050565b6000806040838503121561234f57600080fd5b61235883612270565b946020939093013593505050565b6000806020838503121561237957600080fd5b823567ffffffffffffffff8082111561239157600080fd5b818501915085601f8301126123a557600080fd5b8135818111156123b457600080fd5b8660208285010111156123c657600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052602160045260246000fd5b6002811061240c57634e487b7160e01b600052602160045260246000fd5b9052565b6020810161064c82846123ee565b60006020828403121561243057600080fd5b61190082612270565b60008060006060848603121561244e57600080fd5b61245784612270565b925061246560208501612270565b9150604084013590509250925092565b60006020828403121561248757600080fd5b81356002811061190057600080fd5b600080604083850312156124a957600080fd5b50508035926020909101359150565b801515811461187657600080fd5b600080604083850312156124d957600080fd5b6124e283612270565b915060208301356124f2816124b8565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561252957600080fd5b61253285612270565b935061254060208601612270565b925060408501359150606085013567ffffffffffffffff8082111561256457600080fd5b818701915087601f83011261257857600080fd5b81358181111561258a5761258a6124fd565b604051601f8201601f19908116603f011681019083821181831017156125b2576125b26124fd565b816040528281528a60208487010111156125cb57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060006040848603121561260457600080fd5b83359250602084013567ffffffffffffffff8082111561262357600080fd5b818601915086601f83011261263757600080fd5b81358181111561264657600080fd5b8760208260051b850101111561265b57600080fd5b6020830194508093505050509250925092565b6000806040838503121561268157600080fd5b61268a83612270565b91506122af60208401612270565b6000602082840312156126aa57600080fd5b8135611900816124b8565b634e487b7160e01b600052601160045260246000fd5b600082198211156126de576126de6126b5565b500190565b600181811c908216806126f757607f821691505b6020821081141561271857634e487b7160e01b600052602260045260246000fd5b50919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6000825161275f8184602087016122b8565b620c4def60eb1b920191825250600301919050565b600083516127868184602088016122b8565b83519083019061279a8183602088016122b8565b01949350505050565b6000602082840312156127b557600080fd5b5051919050565b8281526040810161190060208301846123ee565b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038416815282602082015260606040820152600061280e60608301846122e4565b95945050505050565b60006020828403121561282957600080fd5b8151611900816124b8565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261286660808301846122e4565b9695505050505050565b60006020828403121561288257600080fd5b81516119008161223d565b60006000198214156128a1576128a16126b5565b5060010190565b6000826128b7576128b76127d0565b500490565b6000828210156128ce576128ce6126b5565b500390565b6000826128e2576128e26127d0565b500690565b634e487b7160e01b600052603260045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a";

type PawnBotsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PawnBotsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PawnBots__factory extends ContractFactory {
  constructor(...args: PawnBotsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    chainlinkToken_: string,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PawnBots> {
    return super.deploy(
      chainlinkToken_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    ) as Promise<PawnBots>;
  }
  getDeployTransaction(
    chainlinkToken_: string,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chainlinkToken_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    );
  }
  attach(address: string): PawnBots {
    return super.attach(address) as PawnBots;
  }
  connect(signer: Signer): PawnBots__factory {
    return super.connect(signer) as PawnBots__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PawnBotsInterface {
    return new utils.Interface(_abi) as PawnBotsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PawnBots {
    return new Contract(address, _abi, signerOrProvider) as PawnBots;
  }
}
