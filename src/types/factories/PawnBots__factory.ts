/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PawnBots, PawnBotsInterface } from "../PawnBots";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chainlinkToken_",
        type: "address",
      },
      {
        internalType: "address",
        name: "vrfCoordinator_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "vrfFee_",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "vrfKeyHash_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PawnBots__CollectionSizeExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MaxReservedElementsExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MintIsAlreadyEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__MintIsNotEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__OffsetAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__RandomnessAlreadyRequested",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__TooEarlyToReveal",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__UserEligibilityExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__UserIsNotEligible",
    type: "error",
  },
  {
    inputs: [],
    name: "PawnBots__VrfRequestIdMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DisableMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EnableMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "Reserve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Reveal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "SetBaseURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "SetClaims",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "SetProvenanceHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "SetRevealTime",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COLLECTION_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_RESERVED_ELEMENTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "allocatedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMintEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provenanceHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reserveAmount",
        type: "uint256",
      },
    ],
    name: "reserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedElements",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "allocatedAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IPawnBots.NewClaim[]",
        name: "newClaims",
        type: "tuple[]",
      },
    ],
    name: "setClaims",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newProvenanceHash",
        type: "string",
      },
    ],
    name: "setProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newRevealTime",
        type: "uint256",
      },
    ],
    name: "setRevealTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002ec138038062002ec18339810160408190526200003491620001fa565b60408051808201825260098152685061776e20426f747360b81b602080830191825283518085019094526004845263424f545360e01b90840152815186938893929091620000859160009162000137565b5080516200009b90600190602084019062000137565b505050620000b8620000b2620000e160201b60201c565b620000e5565b6001600b556001600160a01b0391821660a05216608052601491909155601555506200027f9050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001459062000242565b90600052602060002090601f016020900481019282620001695760008555620001b4565b82601f106200018457805160ff1916838001178555620001b4565b82800160010185558215620001b4579182015b82811115620001b457825182559160200191906001019062000197565b50620001c2929150620001c6565b5090565b5b80821115620001c25760008155600101620001c7565b80516001600160a01b0381168114620001f557600080fd5b919050565b600080600080608085870312156200021157600080fd5b6200021c85620001dd565b93506200022c60208601620001dd565b6040860151606090960151949790965092505050565b600181811c908216806200025757607f821691505b602082108114156200027957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051612c15620002ac60003960008181610e9f0152611bda01526000611bab0152612c156000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c8063715018a611610160578063ba829d71116100d8578063d55565441161008c578063e82f0c0e11610071578063e82f0c0e146104f3578063e985e9c514610506578063f2fde38b1461054257600080fd5b8063d5556544146104e1578063d8258d95146104ea57600080fd5b8063c6788bdd116100bd578063c6788bdd14610476578063c6ab67a3146104c6578063c87b56dd146104ce57600080fd5b8063ba829d711461045a578063c1e285071461046357600080fd5b806395d89b411161012f578063a22cb46511610114578063a22cb4651461042c578063a475b5dd1461043f578063b88d4fde1461044757600080fd5b806395d89b4114610411578063a0712d681461041957600080fd5b8063715018a6146103d2578063819b25ba146103da5780638da5cb5b146103ed57806394985ddd146103fe57600080fd5b8063346de50a116101f357806350a55ce3116101c25780636352211e116101a75780636352211e146103a357806363d4a471146103b657806370a08231146103bf57600080fd5b806350a55ce31461038757806355f804b31461039057600080fd5b8063346de50a1461034c57806342842e0e1461035957806344b28d591461036c5780634f6ccce71461037457600080fd5b8063109695231161024a57806323b872dd1161022f57806323b872dd1461031e5780632f745c591461033157806334452f381461034457600080fd5b806310969523146102f957806318160ddd1461030c57600080fd5b806301ffc9a71461027c57806306fdde03146102a4578063081812fc146102b9578063095ea7b3146102e4575b600080fd5b61028f61028a3660046124ed565b610555565b60405190151581526020015b60405180910390f35b6102ac610580565b60405161029b9190612562565b6102cc6102c7366004612575565b610612565b6040516001600160a01b03909116815260200161029b565b6102f76102f23660046125aa565b6106ac565b005b6102f761030736600461269c565b6107c2565b6008545b60405190815260200161029b565b6102f761032c3660046126e5565b610859565b61031061033f3660046125aa565b6108e0565b6102f7610988565b600e5461028f9060ff1681565b6102f76103673660046126e5565b610a28565b6102f7610a43565b610310610382366004612575565b610ae7565b6103106103e881565b6102f761039e36600461269c565b610b8b565b6102cc6103b1366004612575565b610c17565b61031060115481565b6103106103cd366004612721565b610ca2565b6102f7610d3c565b6102f76103e8366004612575565b610d90565b600a546001600160a01b03166102cc565b6102f761040c36600461273c565b610e94565b6102ac610f1a565b6102f7610427366004612575565b610f29565b6102f761043a36600461276c565b611104565b6102f761110f565b6102f76104553660046127a3565b6111cf565b61031060125481565b6102f7610471366004612575565b61125d565b6104a9610484366004612721565b600d6020526000908152604090208054600182015460029092015460ff909116919083565b60408051931515845260208401929092529082015260600161029b565b6102ac6112da565b6102ac6104dc366004612575565b611368565b610310600f5481565b61031061271081565b6102f761050136600461281f565b611473565b61028f6105143660046128f3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102f7610550366004612721565b611597565b60006001600160e01b0319821663780e9d6360e01b148061057a575061057a82611667565b92915050565b60606000805461058f90612926565b80601f01602080910402602001604051908101604052809291908181526020018280546105bb90612926565b80156106085780601f106105dd57610100808354040283529160200191610608565b820191906000526020600020905b8154815290600101906020018083116105eb57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106905760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106b782610c17565b9050806001600160a01b0316836001600160a01b031614156107255760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610687565b336001600160a01b038216148061074157506107418133610514565b6107b35760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610687565b6107bd83836116b7565b505050565b600a546001600160a01b0316331461080a5760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b805161081d90601090602084019061243e565b507f6760362308ca665d8ad5234d7f09a8ac815ee45be8350cad464cb1e4eadd34ee601060405161084e919061295b565b60405180910390a150565b6108633382611725565b6108d55760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610687565b6107bd838383611818565b60006108eb83610ca2565b821061095f5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e64730000000000000000000000000000000000000000006064820152608401610687565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600a546001600160a01b031633146109d05760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b600e5460ff166109f3576040516350a7103d60e11b815260040160405180910390fd5b600e805460ff191690556040517f34fbd82e2df1c2d790d07338e2119d296a4a7b910e3457b6a63733d4c4864e5b90600090a1565b6107bd838383604051806020016040528060008152506111cf565b600a546001600160a01b03163314610a8b5760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b600e5460ff1615610aaf5760405163c268f4f960e01b815260040160405180910390fd5b600e805460ff191660011790556040517fc836c774ff195d5ac94346d6005f8958fe056a651a1b28f8856085a8305089e690600090a1565b6000610af260085490565b8210610b665760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e647300000000000000000000000000000000000000006064820152608401610687565b60088281548110610b7957610b79612a03565b90600052602060002001549050919050565b600a546001600160a01b03163314610bd35760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b8051610be690601390602084019061243e565b507f23c8c9488efebfd474e85a7956de6f39b17c7ab88502d42a623db2d8e382bbaa601360405161084e919061295b565b6000818152600260205260408120546001600160a01b03168061057a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610687565b60006001600160a01b038216610d205760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610687565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610d845760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b610d8e60006119d7565b565b600a546001600160a01b03163314610dd85760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b6103e860115482610de99190612a2f565b1115610e08576040516303a4ce6360e21b815260040160405180910390fd5b6000610e1360085490565b905060005b82811015610e4557610e3333610e2e8385612a2f565b611a29565b80610e3d81612a47565b915050610e18565b508160116000828254610e589190612a2f565b90915550506040518281527fdb7b64a879507c32bda4d0cf22dee29ed875c7157ecbbc10fe11bf14fab06d129060200160405180910390a15050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f0c5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610687565b610f168282611a43565b5050565b60606001805461058f90612926565b6002600b541415610f7c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610687565b6002600b55600e5460ff16610fa4576040516350a7103d60e11b815260040160405180910390fd5b612710610fb060085490565b610fba9083612a2f565b1115610fd957604051637d5b3a6760e11b815260040160405180910390fd5b336000908152600d60209081526040918290208251606081018452815460ff16151580825260018301549382019390935260029091015492810192909252611034576040516377c84cb760e11b815260040160405180910390fd5b806040015181602001516110489190612a62565b8211156110685760405163bcf0f9a560e01b815260040160405180910390fd5b336000908152600d60205260408120600201805484929061108a908490612a2f565b90915550600090505b828110156110c55760006110a660085490565b90506110b23382611a29565b50806110bd81612a47565b915050611093565b5060405182815233907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a250506001600b55565b610f16338383611ad8565b600a546001600160a01b031633146111575760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b60125442101561117a57604051630bfa01e360e41b815260040160405180910390fd5b600f541561119b576040516378a1f93760e11b815260040160405180910390fd5b601654156111bc576040516384049d1360e01b815260040160405180910390fd5b6111ca601554601454611ba7565b601655565b6111d93383611725565b61124b5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610687565b61125784848484611d32565b50505050565b600a546001600160a01b031633146112a55760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b60128190556040518181527fd3c27564aa5824adeda19a9566eef46a5885ecd23d94587892f87a30f3720c169060200161084e565b601080546112e790612926565b80601f016020809104026020016040519081016040528092919081815260200182805461131390612926565b80156113605780601f1061133557610100808354040283529160200191611360565b820191906000526020600020905b81548152906001019060200180831161134357829003601f168201915b505050505081565b6000818152600260205260409020546060906001600160a01b03166113a057604051636d23a94560e11b815260040160405180910390fd5b60006113aa611db0565b9050600f54600014156113fd5760008151116113d557604051806020016040528060008152506113f6565b806040516020016113e69190612a79565b6040516020818303038152906040525b9392505050565b6000612710600f54856114109190612a2f565b61141a9190612ac4565b9050600082511161143a5760405180602001604052806000815250611465565b8161144482611dbf565b604051602001611455929190612ad8565b6040516020818303038152906040525b949350505050565b50919050565b600a546001600160a01b031633146114bb5760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b60005b815181101561156a576114ed604051806060016040528060001515815260200160008152602001600081525090565b600083838151811061150157611501612a03565b60209081029190910181015160018085528183015185840190815291516001600160a01b03166000908152600d9093526040928390208551815460ff1916901515178155915190820155920151600290920191909155508061156281612a47565b9150506114be565b506040517f7ec21063f1561e00533afbbbc7726d099265cf2abb3a59eff5b7e147d0ca37c390600090a150565b600a546001600160a01b031633146115df5760405162461bcd60e51b81526020600482018190526024820152600080516020612be98339815191526044820152606401610687565b6001600160a01b03811661165b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610687565b611664816119d7565b50565b60006001600160e01b031982166380ac58cd60e01b148061169857506001600160e01b03198216635b5e139f60e01b145b8061057a57506301ffc9a760e01b6001600160e01b031983161461057a565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906116ec82610c17565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661179e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610687565b60006117a983610c17565b9050806001600160a01b0316846001600160a01b031614806117e45750836001600160a01b03166117d984610612565b6001600160a01b0316145b8061146557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611465565b826001600160a01b031661182b82610c17565b6001600160a01b0316146118a75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610687565b6001600160a01b0382166119095760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610687565b611914838383611ed5565b61191f6000826116b7565b6001600160a01b0383166000908152600360205260408120805460019290611948908490612a62565b90915550506001600160a01b0382166000908152600360205260408120805460019290611976908490612a2f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f16828260405180602001604052806000815250611f8d565b600f5415611a64576040516378a1f93760e11b815260040160405180910390fd5b8160165414611a8657604051634cb61eaf60e11b815260040160405180910390fd5b611a936001612710612a62565b611a9d9082612ac4565b611aa8906001612a2f565b600f556040517f66b9f0d2f5af4125e8098bf5f1efc517ed46a70d8638734d186af310e2f8bc7590600090a15050565b816001600160a01b0316836001600160a01b03161415611b3a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610687565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001611c17929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611c4493929190612b17565b602060405180830381600087803b158015611c5e57600080fd5b505af1158015611c72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c969190612b48565b506000838152600c6020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a090910190925281519183019190912093879052919052611cf2906001612a2f565b6000858152600c60205260409020556114658482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b611d3d848484611818565b611d498484848461200b565b6112575760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610687565b60606013805461058f90612926565b606081611de35750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611e0d5780611df781612a47565b9150611e069050600a83612b65565b9150611de7565b60008167ffffffffffffffff811115611e2857611e286125d4565b6040519080825280601f01601f191660200182016040528015611e52576020820181803683370190505b5090505b841561146557611e67600183612a62565b9150611e74600a86612ac4565b611e7f906030612a2f565b60f81b818381518110611e9457611e94612a03565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611ece600a86612b65565b9450611e56565b6001600160a01b038316611f3057611f2b81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f53565b816001600160a01b0316836001600160a01b031614611f5357611f538382612160565b6001600160a01b038216611f6a576107bd816121fd565b826001600160a01b0316826001600160a01b0316146107bd576107bd82826122ac565b611f9783836122f0565b611fa4600084848461200b565b6107bd5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610687565b60006001600160a01b0384163b1561215857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061204f903390899088908890600401612b79565b602060405180830381600087803b15801561206957600080fd5b505af1925050508015612099575060408051601f3d908101601f1916820190925261209691810190612bb5565b60015b61213e573d8080156120c7576040519150601f19603f3d011682016040523d82523d6000602084013e6120cc565b606091505b5080516121365760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610687565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611465565b506001611465565b6000600161216d84610ca2565b6121779190612a62565b6000838152600760205260409020549091508082146121ca576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061220f90600190612a62565b6000838152600960205260408120546008805493945090928490811061223757612237612a03565b90600052602060002001549050806008838154811061225857612258612a03565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061229057612290612bd2565b6001900381819060005260206000200160009055905550505050565b60006122b783610ca2565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160a01b0382166123465760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610687565b6000818152600260205260409020546001600160a01b0316156123ab5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610687565b6123b760008383611ed5565b6001600160a01b03821660009081526003602052604081208054600192906123e0908490612a2f565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461244a90612926565b90600052602060002090601f01602090048101928261246c57600085556124b2565b82601f1061248557805160ff19168380011785556124b2565b828001600101855582156124b2579182015b828111156124b2578251825591602001919060010190612497565b506124be9291506124c2565b5090565b5b808211156124be57600081556001016124c3565b6001600160e01b03198116811461166457600080fd5b6000602082840312156124ff57600080fd5b81356113f6816124d7565b60005b8381101561252557818101518382015260200161250d565b838111156112575750506000910152565b6000815180845261254e81602086016020860161250a565b601f01601f19169290920160200192915050565b6020815260006113f66020830184612536565b60006020828403121561258757600080fd5b5035919050565b80356001600160a01b03811681146125a557600080fd5b919050565b600080604083850312156125bd57600080fd5b6125c68361258e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561260d5761260d6125d4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561263c5761263c6125d4565b604052919050565b600067ffffffffffffffff83111561265e5761265e6125d4565b612671601f8401601f1916602001612613565b905082815283838301111561268557600080fd5b828260208301376000602084830101529392505050565b6000602082840312156126ae57600080fd5b813567ffffffffffffffff8111156126c557600080fd5b8201601f810184136126d657600080fd5b61146584823560208401612644565b6000806000606084860312156126fa57600080fd5b6127038461258e565b92506127116020850161258e565b9150604084013590509250925092565b60006020828403121561273357600080fd5b6113f68261258e565b6000806040838503121561274f57600080fd5b50508035926020909101359150565b801515811461166457600080fd5b6000806040838503121561277f57600080fd5b6127888361258e565b915060208301356127988161275e565b809150509250929050565b600080600080608085870312156127b957600080fd5b6127c28561258e565b93506127d06020860161258e565b925060408501359150606085013567ffffffffffffffff8111156127f357600080fd5b8501601f8101871361280457600080fd5b61281387823560208401612644565b91505092959194509250565b6000602080838503121561283257600080fd5b823567ffffffffffffffff8082111561284a57600080fd5b818501915085601f83011261285e57600080fd5b813581811115612870576128706125d4565b61287e848260051b01612613565b818152848101925060069190911b83018401908782111561289e57600080fd5b928401925b818410156128e857604084890312156128bc5760008081fd5b6128c46125ea565b6128cd8561258e565b815284860135868201528352604090930192918401916128a3565b979650505050505050565b6000806040838503121561290657600080fd5b61290f8361258e565b915061291d6020840161258e565b90509250929050565b600181811c9082168061293a57607f821691505b6020821081141561146d57634e487b7160e01b600052602260045260246000fd5b600060208083526000845481600182811c91508083168061297d57607f831692505b85831081141561299b57634e487b7160e01b85526022600452602485fd5b8786018381526020018180156129b857600181146129c9576129f4565b60ff198616825287820196506129f4565b60008b81526020902060005b868110156129ee578154848201529085019089016129d5565b83019750505b50949998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115612a4257612a42612a19565b500190565b6000600019821415612a5b57612a5b612a19565b5060010190565b600082821015612a7457612a74612a19565b500390565b60008251612a8b81846020870161250a565b620c4def60eb1b92019182525064173539b7b760d91b6003820152600801919050565b634e487b7160e01b600052601260045260246000fd5b600082612ad357612ad3612aae565b500690565b60008351612aea81846020880161250a565b835190830190612afe81836020880161250a565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0384168152826020820152606060408201526000612b3f6060830184612536565b95945050505050565b600060208284031215612b5a57600080fd5b81516113f68161275e565b600082612b7457612b74612aae565b500490565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612bab6080830184612536565b9695505050505050565b600060208284031215612bc757600080fd5b81516113f6816124d7565b634e487b7160e01b600052603160045260246000fdfe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a";

type PawnBotsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PawnBotsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PawnBots__factory extends ContractFactory {
  constructor(...args: PawnBotsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    chainlinkToken_: string,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PawnBots> {
    return super.deploy(
      chainlinkToken_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    ) as Promise<PawnBots>;
  }
  getDeployTransaction(
    chainlinkToken_: string,
    vrfCoordinator_: string,
    vrfFee_: BigNumberish,
    vrfKeyHash_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      chainlinkToken_,
      vrfCoordinator_,
      vrfFee_,
      vrfKeyHash_,
      overrides || {}
    );
  }
  attach(address: string): PawnBots {
    return super.attach(address) as PawnBots;
  }
  connect(signer: Signer): PawnBots__factory {
    return super.connect(signer) as PawnBots__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PawnBotsInterface {
    return new utils.Interface(_abi) as PawnBotsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PawnBots {
    return new Contract(address, _abi, signerOrProvider) as PawnBots;
  }
}
